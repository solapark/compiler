State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 $@2: %empty

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list '}'

   11 type_specifier: TYPE
   12               | VOID
   13               | struct_specifier

   14 $@3: %empty

   15 struct_specifier: STRUCT ID '{' $@3 def_list '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'
   19          | type_specifier pointers ID '(' param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 $@4: %empty

   33 compound_stmt: '{' $@4 local_defs stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'
   38     | compound_stmt
   39     | RETURN ';'

   40 $@5: %empty

   41 stmt: RETURN $@5 expr ';'
   42     | ';'
   43     | IF cond_label '(' expr branch_false ')' stmt

   44 @6: %empty

   45 stmt: IF cond_label '(' expr branch_false ')' stmt ELSE @6 stmt
   46     | WHILE cond_label '(' expr branch_false ')' stmt
   47     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   48     | BREAK ';'
   49     | CONTINUE ';'
   50     | 'w' '(' CHAR_CONST ')'
   51     | 'w' '(' STRING ')'
   52     | 'w' '(' expr ')'

   53 cond_label: %empty

   54 branch_false: %empty

   55 expr_e: expr
   56       | %empty

   57 const_expr: INTEGER_CONST

   58 $@7: %empty

   59 expr: unary '=' $@7 expr
   60     | or_expr

   61 or_expr: or_list

   62 or_list: or_list LOGICAL_OR and_expr
   63        | and_expr

   64 and_expr: and_list

   65 and_list: and_list LOGICAL_AND binary
   66         | binary

   67 binary: binary RELOP_LESS binary
   68       | binary RELOP_LESS_EQUAL binary
   69       | binary RELOP_GREATER binary
   70       | binary RELOP_GREATER_EQUAL binary
   71       | binary EQUOP_EQUAL binary
   72       | binary EQUOP_NOT_EQUAL binary
   73       | binary '*' binary
   74       | binary '/' binary
   75       | binary '%' binary
   76       | binary '+' binary
   77       | binary '-' binary
   78       | unary

   79 unary: '(' expr ')'
   80      | '(' unary ')'
   81      | INTEGER_CONST
   82      | CHAR_CONST
   83      | ID
   84      | STRING
   85      | '-' unary
   86      | '!' unary
   87      | unary INCOP
   88      | unary DECOP
   89      | INCOP unary
   90      | DECOP unary
   91      | '&' unary
   92      | '*' unary
   93      | unary '[' expr ']'
   94      | unary '.' ID
   95      | unary STRUCTOP ID
   96      | unary '(' func_label args ')'
   97      | unary '(' func_label ')'

   98 func_label: %empty

   99 args: expr
  100     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 86
'%' (37) 75
'&' (38) 91
'(' (40) 17 18 19 43 45 46 47 50 51 52 79 80 96 97
')' (41) 17 18 19 43 45 46 47 50 51 52 79 80 96 97
'*' (42) 20 73 92
'+' (43) 76
',' (44) 23 100
'-' (45) 77 85
'.' (46) 94
'/' (47) 74
';' (59) 4 5 6 7 28 29 30 31 37 39 41 42 47 48 49
'=' (61) 59
'[' (91) 5 25 29 93
']' (93) 5 25 29 93
'w' (119) 50 51 52
'{' (123) 10 15 33
'}' (125) 10 15 33
error (256)
TYPE (258) 11
VOID (259) 12 18
STRUCT (260) 15 16
RETURN (261) 39 41
IF (262) 43 45
ELSE (263) 45
WHILE (264) 46
FOR (265) 47
BREAK (266) 48
CONTINUE (267) 49
LOGICAL_OR (268) 62
LOGICAL_AND (269) 65
RELOP_LESS (270) 67
RELOP_LESS_EQUAL (271) 68
RELOP_GREATER (272) 69
RELOP_GREATER_EQUAL (273) 70
EQUOP_EQUAL (274) 71
EQUOP_NOT_EQUAL (275) 72
INCOP (276) 87 89
DECOP (277) 88 90
STRUCTOP (278) 95
ID (279) 4 5 15 16 17 18 19 24 25 28 29 83 94 95
INTEGER_CONST (280) 57 81
STRING (281) 51 84
CHAR_CONST (282) 50 82
IFSIMPLE (283)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
ext_def_list (49)
    on left: 2 3, on right: 1 2
ext_def (50)
    on left: 4 5 6 7 10, on right: 2
$@1 (51)
    on left: 8, on right: 10
$@2 (52)
    on left: 9, on right: 10
type_specifier (53)
    on left: 11 12 13, on right: 4 5 7 17 18 19 24 25 28 29 30
struct_specifier (54)
    on left: 15 16, on right: 13
$@3 (55)
    on left: 14, on right: 15
func_decl (56)
    on left: 17 18 19, on right: 6 10 31
pointers (57)
    on left: 20 21, on right: 4 5 17 18 19 24 25 28 29
param_list (58)
    on left: 22 23, on right: 19 23
param_decl (59)
    on left: 24 25, on right: 22 23
def_list (60)
    on left: 26 27, on right: 15 26 34
def (61)
    on left: 28 29 30 31, on right: 26
compound_stmt (62)
    on left: 33, on right: 38
$@4 (63)
    on left: 32, on right: 33
local_defs (64)
    on left: 34, on right: 10 33
stmt_list (65)
    on left: 35 36, on right: 10 33 35
stmt (66)
    on left: 37 38 39 41 42 43 45 46 47 48 49 50 51 52, on right: 35
    43 45 46 47
$@5 (67)
    on left: 40, on right: 41
@6 (68)
    on left: 44, on right: 45
cond_label (69)
    on left: 53, on right: 43 45 46
branch_false (70)
    on left: 54, on right: 43 45 46
expr_e (71)
    on left: 55 56, on right: 47
const_expr (72)
    on left: 57, on right: 5 25 29
expr (73)
    on left: 59 60, on right: 37 41 43 45 46 52 55 59 79 93 99 100
$@7 (74)
    on left: 58, on right: 59
or_expr (75)
    on left: 61, on right: 60
or_list (76)
    on left: 62 63, on right: 61 62
and_expr (77)
    on left: 64, on right: 62 63
and_list (78)
    on left: 65 66, on right: 64 65
binary (79)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78, on right: 65 66 67
    68 69 70 71 72 73 74 75 76 77
unary (80)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97, on right: 59 78 80 85 86 87 88 89 90 91 92 93 94 95 96 97
func_label (81)
    on left: 98, on right: 96 97
args (82)
    on left: 99 100, on right: 96 100


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 type_specifier: TYPE .

    $default  reduce using rule 11 (type_specifier)


State 5

   12 type_specifier: VOID .

    $default  reduce using rule 12 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@3 def_list '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   13 type_specifier: struct_specifier .

    $default  reduce using rule 13 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
   10        | func_decl . '{' $@1 local_defs $@2 stmt_list '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' $@3 def_list '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   10 ext_def: func_decl '{' . $@1 local_defs $@2 stmt_list '}'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 19


State 17

   15 struct_specifier: STRUCT ID '{' . $@3 def_list '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 20


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 21
    '('  shift, and go to state 22
    ';'  shift, and go to state 23


State 19

   10 ext_def: func_decl '{' $@1 . local_defs $@2 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 24
    local_defs  go to state 25


State 20

   15 struct_specifier: STRUCT ID '{' $@3 . def_list '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 21

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 27

    const_expr  go to state 28


State 22

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 29
    STRUCT  shift, and go to state 6
    ')'     shift, and go to state 30

    type_specifier    go to state 31
    struct_specifier  go to state 9
    param_list        go to state 32
    param_decl        go to state 33


State 23

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 24

   26 def_list: def_list . def
   34 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 34
    struct_specifier  go to state 9
    func_decl         go to state 35
    def               go to state 36


State 25

   10 ext_def: func_decl '{' $@1 local_defs . $@2 stmt_list '}'

    $default  reduce using rule 9 ($@2)

    $@2  go to state 37


State 26

   15 struct_specifier: STRUCT ID '{' $@3 def_list . '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 38

    type_specifier    go to state 34
    struct_specifier  go to state 9
    func_decl         go to state 35
    def               go to state 36


State 27

   57 const_expr: INTEGER_CONST .

    $default  reduce using rule 57 (const_expr)


State 28

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 39


State 29

   12 type_specifier: VOID .
   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 40

    $default  reduce using rule 12 (type_specifier)


State 30

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 31

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 41


State 32

   19 func_decl: type_specifier pointers ID '(' param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 42
    ')'  shift, and go to state 43


State 33

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 34

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 44

    $default  reduce using rule 21 (pointers)

    pointers  go to state 45


State 35

   31 def: func_decl . ';'

    ';'  shift, and go to state 46


State 36

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 37

   10 ext_def: func_decl '{' $@1 local_defs $@2 . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 47


State 38

   15 struct_specifier: STRUCT ID '{' $@3 def_list '}' .

    $default  reduce using rule 15 (struct_specifier)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 48


State 40

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 41

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 49


State 42

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 31
    struct_specifier  go to state 9
    param_decl        go to state 50


State 43

   19 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 44

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 45

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 51


State 46

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 47

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    '}'            shift, and go to state 71
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 74
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 48

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 49

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 82

    $default  reduce using rule 24 (param_decl)


State 50

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 51

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 83
    '('  shift, and go to state 22
    ';'  shift, and go to state 84


State 52

   39 stmt: RETURN . ';'
   41     | RETURN . $@5 expr ';'

    ';'  shift, and go to state 85

    $default  reduce using rule 40 ($@5)

    $@5  go to state 86


State 53

   43 stmt: IF . cond_label '(' expr branch_false ')' stmt
   45     | IF . cond_label '(' expr branch_false ')' stmt ELSE @6 stmt

    $default  reduce using rule 53 (cond_label)

    cond_label  go to state 87


State 54

   46 stmt: WHILE . cond_label '(' expr branch_false ')' stmt

    $default  reduce using rule 53 (cond_label)

    cond_label  go to state 88


State 55

   47 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 89


State 56

   48 stmt: BREAK . ';'

    ';'  shift, and go to state 90


State 57

   49 stmt: CONTINUE . ';'

    ';'  shift, and go to state 91


State 58

   89 unary: INCOP . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 92


State 59

   90 unary: DECOP . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 93


State 60

   83 unary: ID .

    $default  reduce using rule 83 (unary)


State 61

   81 unary: INTEGER_CONST .

    $default  reduce using rule 81 (unary)


State 62

   84 unary: STRING .

    $default  reduce using rule 84 (unary)


State 63

   82 unary: CHAR_CONST .

    $default  reduce using rule 82 (unary)


State 64

   91 unary: '&' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 94


State 65

   85 unary: '-' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 95


State 66

   92 unary: '*' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 96


State 67

   86 unary: '!' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 97


State 68

   79 unary: '(' . expr ')'
   80      | '(' . unary ')'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 98
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 99


State 69

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 70

   33 compound_stmt: '{' . $@4 local_defs stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 100


State 71

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list '}' .

    $default  reduce using rule 10 (ext_def)


State 72

   50 stmt: 'w' . '(' CHAR_CONST ')'
   51     | 'w' . '(' STRING ')'
   52     | 'w' . '(' expr ')'

    '('  shift, and go to state 101


State 73

   38 stmt: compound_stmt .

    $default  reduce using rule 38 (stmt)


State 74

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 75

   37 stmt: expr . ';'

    ';'  shift, and go to state 102


State 76

   60 expr: or_expr .

    $default  reduce using rule 60 (expr)


State 77

   61 or_expr: or_list .
   62 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 103

    $default  reduce using rule 61 (or_expr)


State 78

   63 or_list: and_expr .

    $default  reduce using rule 63 (or_list)


State 79

   64 and_expr: and_list .
   65 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 104

    $default  reduce using rule 64 (and_expr)


State 80

   66 and_list: binary .
   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    RELOP_LESS           shift, and go to state 105
    RELOP_LESS_EQUAL     shift, and go to state 106
    RELOP_GREATER        shift, and go to state 107
    RELOP_GREATER_EQUAL  shift, and go to state 108
    EQUOP_EQUAL          shift, and go to state 109
    EQUOP_NOT_EQUAL      shift, and go to state 110
    '+'                  shift, and go to state 111
    '-'                  shift, and go to state 112
    '*'                  shift, and go to state 113
    '/'                  shift, and go to state 114
    '%'                  shift, and go to state 115

    $default  reduce using rule 66 (and_list)


State 81

   59 expr: unary . '=' $@7 expr
   78 binary: unary .
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '='       shift, and go to state 119
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 78 (binary)


State 82

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INTEGER_CONST  shift, and go to state 27

    const_expr  go to state 123


State 83

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 27

    const_expr  go to state 124


State 84

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 85

   39 stmt: RETURN ';' .

    $default  reduce using rule 39 (stmt)


State 86

   41 stmt: RETURN $@5 . expr ';'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 125
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 87

   43 stmt: IF cond_label . '(' expr branch_false ')' stmt
   45     | IF cond_label . '(' expr branch_false ')' stmt ELSE @6 stmt

    '('  shift, and go to state 126


State 88

   46 stmt: WHILE cond_label . '(' expr branch_false ')' stmt

    '('  shift, and go to state 127


State 89

   47 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    $default  reduce using rule 56 (expr_e)

    expr_e    go to state 128
    expr      go to state 129
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 90

   48 stmt: BREAK ';' .

    $default  reduce using rule 48 (stmt)


State 91

   49 stmt: CONTINUE ';' .

    $default  reduce using rule 49 (stmt)


State 92

   87 unary: unary . INCOP
   88      | unary . DECOP
   89      | INCOP unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 89 (unary)


State 93

   87 unary: unary . INCOP
   88      | unary . DECOP
   90      | DECOP unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 90 (unary)


State 94

   87 unary: unary . INCOP
   88      | unary . DECOP
   91      | '&' unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 91 (unary)


State 95

   85 unary: '-' unary .
   87      | unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 85 (unary)


State 96

   87 unary: unary . INCOP
   88      | unary . DECOP
   92      | '*' unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 92 (unary)


State 97

   86 unary: '!' unary .
   87      | unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 86 (unary)


State 98

   79 unary: '(' expr . ')'

    ')'  shift, and go to state 130


State 99

   59 expr: unary . '=' $@7 expr
   78 binary: unary .
   80 unary: '(' unary . ')'
   87      | unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '='       shift, and go to state 119
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    ')'       shift, and go to state 131
    '.'       shift, and go to state 122

    $default  reduce using rule 78 (binary)


State 100

   33 compound_stmt: '{' $@4 . local_defs stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 24
    local_defs  go to state 132


State 101

   50 stmt: 'w' '(' . CHAR_CONST ')'
   51     | 'w' '(' . STRING ')'
   52     | 'w' '(' . expr ')'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 133
    CHAR_CONST     shift, and go to state 134
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 135
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 102

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 103

   62 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    and_expr  go to state 136
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 137


State 104

   65 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 138
    unary   go to state 137


State 105

   67 binary: binary RELOP_LESS . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 139
    unary   go to state 137


State 106

   68 binary: binary RELOP_LESS_EQUAL . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 140
    unary   go to state 137


State 107

   69 binary: binary RELOP_GREATER . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 141
    unary   go to state 137


State 108

   70 binary: binary RELOP_GREATER_EQUAL . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 142
    unary   go to state 137


State 109

   71 binary: binary EQUOP_EQUAL . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 143
    unary   go to state 137


State 110

   72 binary: binary EQUOP_NOT_EQUAL . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 144
    unary   go to state 137


State 111

   76 binary: binary '+' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 145
    unary   go to state 137


State 112

   77 binary: binary '-' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 146
    unary   go to state 137


State 113

   73 binary: binary '*' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 147
    unary   go to state 137


State 114

   74 binary: binary '/' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 148
    unary   go to state 137


State 115

   75 binary: binary '%' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 149
    unary   go to state 137


State 116

   87 unary: unary INCOP .

    $default  reduce using rule 87 (unary)


State 117

   88 unary: unary DECOP .

    $default  reduce using rule 88 (unary)


State 118

   95 unary: unary STRUCTOP . ID

    ID  shift, and go to state 150


State 119

   59 expr: unary '=' . $@7 expr

    $default  reduce using rule 58 ($@7)

    $@7  go to state 151


State 120

   93 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 152
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 121

   96 unary: unary '(' . func_label args ')'
   97      | unary '(' . func_label ')'

    $default  reduce using rule 98 (func_label)

    func_label  go to state 153


State 122

   94 unary: unary '.' . ID

    ID  shift, and go to state 154


State 123

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 155


State 124

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 156


State 125

   41 stmt: RETURN $@5 expr . ';'

    ';'  shift, and go to state 157


State 126

   43 stmt: IF cond_label '(' . expr branch_false ')' stmt
   45     | IF cond_label '(' . expr branch_false ')' stmt ELSE @6 stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 158
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 127

   46 stmt: WHILE cond_label '(' . expr branch_false ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 159
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 128

   47 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 160


State 129

   55 expr_e: expr .

    $default  reduce using rule 55 (expr_e)


State 130

   79 unary: '(' expr ')' .

    $default  reduce using rule 79 (unary)


State 131

   80 unary: '(' unary ')' .

    $default  reduce using rule 80 (unary)


State 132

   33 compound_stmt: '{' $@4 local_defs . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 161


State 133

   51 stmt: 'w' '(' STRING . ')'
   84 unary: STRING .

    ')'  shift, and go to state 162

    $default  reduce using rule 84 (unary)


State 134

   50 stmt: 'w' '(' CHAR_CONST . ')'
   82 unary: CHAR_CONST .

    ')'  shift, and go to state 163

    ')'       [reduce using rule 82 (unary)]
    $default  reduce using rule 82 (unary)


State 135

   52 stmt: 'w' '(' expr . ')'

    ')'  shift, and go to state 164


State 136

   62 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 62 (or_list)


State 137

   78 binary: unary .
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   96      | unary . '(' func_label args ')'
   97      | unary . '(' func_label ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 120
    '('       shift, and go to state 121
    '.'       shift, and go to state 122

    $default  reduce using rule 78 (binary)


State 138

   65 and_list: and_list LOGICAL_AND binary .
   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    RELOP_LESS           shift, and go to state 105
    RELOP_LESS_EQUAL     shift, and go to state 106
    RELOP_GREATER        shift, and go to state 107
    RELOP_GREATER_EQUAL  shift, and go to state 108
    EQUOP_EQUAL          shift, and go to state 109
    EQUOP_NOT_EQUAL      shift, and go to state 110
    '+'                  shift, and go to state 111
    '-'                  shift, and go to state 112
    '*'                  shift, and go to state 113
    '/'                  shift, and go to state 114
    '%'                  shift, and go to state 115

    $default  reduce using rule 65 (and_list)


State 139

   67 binary: binary . RELOP_LESS binary
   67       | binary RELOP_LESS binary .
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 67 (binary)


State 140

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   68       | binary RELOP_LESS_EQUAL binary .
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 68 (binary)


State 141

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   69       | binary RELOP_GREATER binary .
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 69 (binary)


State 142

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   70       | binary RELOP_GREATER_EQUAL binary .
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 70 (binary)


State 143

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   71       | binary EQUOP_EQUAL binary .
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    RELOP_LESS           shift, and go to state 105
    RELOP_LESS_EQUAL     shift, and go to state 106
    RELOP_GREATER        shift, and go to state 107
    RELOP_GREATER_EQUAL  shift, and go to state 108
    '+'                  shift, and go to state 111
    '-'                  shift, and go to state 112
    '*'                  shift, and go to state 113
    '/'                  shift, and go to state 114
    '%'                  shift, and go to state 115

    $default  reduce using rule 71 (binary)


State 144

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   72       | binary EQUOP_NOT_EQUAL binary .
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    RELOP_LESS           shift, and go to state 105
    RELOP_LESS_EQUAL     shift, and go to state 106
    RELOP_GREATER        shift, and go to state 107
    RELOP_GREATER_EQUAL  shift, and go to state 108
    '+'                  shift, and go to state 111
    '-'                  shift, and go to state 112
    '*'                  shift, and go to state 113
    '/'                  shift, and go to state 114
    '%'                  shift, and go to state 115

    $default  reduce using rule 72 (binary)


State 145

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   76       | binary '+' binary .
   77       | binary . '-' binary

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 76 (binary)


State 146

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary
   77       | binary '-' binary .

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 77 (binary)


State 147

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   73       | binary '*' binary .
   74       | binary . '/' binary
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    $default  reduce using rule 73 (binary)


State 148

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   74       | binary '/' binary .
   75       | binary . '%' binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    $default  reduce using rule 74 (binary)


State 149

   67 binary: binary . RELOP_LESS binary
   68       | binary . RELOP_LESS_EQUAL binary
   69       | binary . RELOP_GREATER binary
   70       | binary . RELOP_GREATER_EQUAL binary
   71       | binary . EQUOP_EQUAL binary
   72       | binary . EQUOP_NOT_EQUAL binary
   73       | binary . '*' binary
   74       | binary . '/' binary
   75       | binary . '%' binary
   75       | binary '%' binary .
   76       | binary . '+' binary
   77       | binary . '-' binary

    $default  reduce using rule 75 (binary)


State 150

   95 unary: unary STRUCTOP ID .

    $default  reduce using rule 95 (unary)


State 151

   59 expr: unary '=' $@7 . expr

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 165
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 152

   93 unary: unary '[' expr . ']'

    ']'  shift, and go to state 166


State 153

   96 unary: unary '(' func_label . args ')'
   97      | unary '(' func_label . ')'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ')'            shift, and go to state 167

    expr      go to state 168
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81
    args      go to state 169


State 154

   94 unary: unary '.' ID .

    $default  reduce using rule 94 (unary)


State 155

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 156

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 170


State 157

   41 stmt: RETURN $@5 expr ';' .

    $default  reduce using rule 41 (stmt)


State 158

   43 stmt: IF cond_label '(' expr . branch_false ')' stmt
   45     | IF cond_label '(' expr . branch_false ')' stmt ELSE @6 stmt

    $default  reduce using rule 54 (branch_false)

    branch_false  go to state 171


State 159

   46 stmt: WHILE cond_label '(' expr . branch_false ')' stmt

    $default  reduce using rule 54 (branch_false)

    branch_false  go to state 172


State 160

   47 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    $default  reduce using rule 56 (expr_e)

    expr_e    go to state 173
    expr      go to state 129
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 161

   33 compound_stmt: '{' $@4 local_defs stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    '}'            shift, and go to state 174
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 74
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 162

   51 stmt: 'w' '(' STRING ')' .

    $default  reduce using rule 51 (stmt)


State 163

   50 stmt: 'w' '(' CHAR_CONST ')' .

    $default  reduce using rule 50 (stmt)


State 164

   52 stmt: 'w' '(' expr ')' .

    $default  reduce using rule 52 (stmt)


State 165

   59 expr: unary '=' $@7 expr .

    $default  reduce using rule 59 (expr)


State 166

   93 unary: unary '[' expr ']' .

    $default  reduce using rule 93 (unary)


State 167

   97 unary: unary '(' func_label ')' .

    $default  reduce using rule 97 (unary)


State 168

   99 args: expr .

    $default  reduce using rule 99 (args)


State 169

   96 unary: unary '(' func_label args . ')'
  100 args: args . ',' expr

    ','  shift, and go to state 175
    ')'  shift, and go to state 176


State 170

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 171

   43 stmt: IF cond_label '(' expr branch_false . ')' stmt
   45     | IF cond_label '(' expr branch_false . ')' stmt ELSE @6 stmt

    ')'  shift, and go to state 177


State 172

   46 stmt: WHILE cond_label '(' expr branch_false . ')' stmt

    ')'  shift, and go to state 178


State 173

   47 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 179


State 174

   33 compound_stmt: '{' $@4 local_defs stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 175

  100 args: args ',' . expr

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 180
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 176

   96 unary: unary '(' func_label args ')' .

    $default  reduce using rule 96 (unary)


State 177

   43 stmt: IF cond_label '(' expr branch_false ')' . stmt
   45     | IF cond_label '(' expr branch_false ')' . stmt ELSE @6 stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 181
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 178

   46 stmt: WHILE cond_label '(' expr branch_false ')' . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 182
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 179

   47 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    $default  reduce using rule 56 (expr_e)

    expr_e    go to state 183
    expr      go to state 129
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 180

  100 args: args ',' expr .

    $default  reduce using rule 100 (args)


State 181

   43 stmt: IF cond_label '(' expr branch_false ')' stmt .
   45     | IF cond_label '(' expr branch_false ')' stmt . ELSE @6 stmt

    ELSE  shift, and go to state 184

    $default  reduce using rule 43 (stmt)


State 182

   46 stmt: WHILE cond_label '(' expr branch_false ')' stmt .

    $default  reduce using rule 46 (stmt)


State 183

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 185


State 184

   45 stmt: IF cond_label '(' expr branch_false ')' stmt ELSE . @6 stmt

    $default  reduce using rule 44 (@6)

    @6  go to state 186


State 185

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 187
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 186

   45 stmt: IF cond_label '(' expr branch_false ')' stmt ELSE @6 . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 188
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 187

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 47 (stmt)


State 188

   45 stmt: IF cond_label '(' expr branch_false ')' stmt ELSE @6 stmt .

    $default  reduce using rule 45 (stmt)
