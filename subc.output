Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl '{' $@1 local_defs stmt_list '}'

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@2: %empty

   14 struct_specifier: STRUCT ID '{' $@2 def_list '}'
   15                 | STRUCT ID

   16 func_decl: type_specifier pointers ID '(' ')'
   17          | type_specifier pointers ID '(' VOID ')'
   18          | type_specifier pointers ID '(' param_list ')'

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 $@3: %empty

   32 compound_stmt: '{' $@3 local_defs stmt_list '}'

   33 local_defs: def_list

   34 stmt_list: stmt_list stmt
   35          | %empty

   36 stmt: expr ';'
   37     | compound_stmt
   38     | RETURN ';'
   39     | RETURN expr ';'
   40     | ';'
   41     | IF '(' expr ')' stmt
   42     | IF '(' expr ')' stmt ELSE stmt
   43     | WHILE '(' expr ')' stmt
   44     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   45     | BREAK ';'
   46     | CONTINUE ';'

   47 expr_e: expr
   48       | %empty

   49 const_expr: expr

   50 expr: unary '=' expr
   51     | or_expr

   52 or_expr: or_list

   53 or_list: or_list LOGICAL_OR and_expr
   54        | and_expr

   55 and_expr: and_list

   56 and_list: and_list LOGICAL_AND binary
   57         | binary

   58 binary: binary RELOP binary
   59       | binary EQUOP binary
   60       | binary '*' binary
   61       | binary '/' binary
   62       | binary '%' binary
   63       | binary '+' binary
   64       | binary '-' binary
   65       | unary

   66 unary: '(' expr ')'
   67      | '(' unary ')'
   68      | INTEGER_CONST
   69      | CHAR_CONST
   70      | ID
   71      | STRING
   72      | '-' unary
   73      | '!' unary
   74      | unary INCOP
   75      | unary DECOP
   76      | INCOP unary
   77      | DECOP unary
   78      | '&' unary
   79      | '*' unary
   80      | unary '[' expr ']'
   81      | unary '.' ID
   82      | unary STRUCTOP ID
   83      | unary '(' args ')'
   84      | unary '(' ')'

   85 args: expr
   86     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73
'%' (37) 62
'&' (38) 78
'(' (40) 16 17 18 41 42 43 44 66 67 83 84
')' (41) 16 17 18 41 42 43 44 66 67 83 84
'*' (42) 19 60 79
'+' (43) 63
',' (44) 22 86
'-' (45) 64 72
'.' (46) 81
'/' (47) 61
';' (59) 4 5 6 7 27 28 29 30 36 38 39 40 44 45 46
'=' (61) 50
'[' (91) 5 24 28 80
']' (93) 5 24 28 80
'{' (123) 9 14 32
'}' (125) 9 14 32
error (256)
TYPE (258) 10
VOID (259) 11 17
STRUCT (260) 14 15
RETURN (261) 38 39
IF (262) 41 42
ELSE (263) 42
WHILE (264) 43
FOR (265) 44
BREAK (266) 45
CONTINUE (267) 46
LOGICAL_OR (268) 53
LOGICAL_AND (269) 56
RELOP (270) 58
EQUOP (271) 59
INCOP (272) 74 76
DECOP (273) 75 77
STRUCTOP (274) 82
ID (275) 4 5 14 15 16 17 18 23 24 27 28 70 81 82
INTEGER_CONST (276) 68
STRING (277) 71
CHAR_CONST (278) 69
IFSIMPLE (279)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
ext_def_list (44)
    on left: 2 3, on right: 1 2
ext_def (45)
    on left: 4 5 6 7 9, on right: 2
$@1 (46)
    on left: 8, on right: 9
type_specifier (47)
    on left: 10 11 12, on right: 4 5 7 16 17 18 23 24 27 28 29
struct_specifier (48)
    on left: 14 15, on right: 12
$@2 (49)
    on left: 13, on right: 14
func_decl (50)
    on left: 16 17 18, on right: 6 9 30
pointers (51)
    on left: 19 20, on right: 4 5 16 17 18 23 24 27 28
param_list (52)
    on left: 21 22, on right: 18 22
param_decl (53)
    on left: 23 24, on right: 21 22
def_list (54)
    on left: 25 26, on right: 14 25 33
def (55)
    on left: 27 28 29 30, on right: 25
compound_stmt (56)
    on left: 32, on right: 37
$@3 (57)
    on left: 31, on right: 32
local_defs (58)
    on left: 33, on right: 9 32
stmt_list (59)
    on left: 34 35, on right: 9 32 34
stmt (60)
    on left: 36 37 38 39 40 41 42 43 44 45 46, on right: 34 41 42 43
    44
expr_e (61)
    on left: 47 48, on right: 44
const_expr (62)
    on left: 49, on right: 5 24 28
expr (63)
    on left: 50 51, on right: 36 39 41 42 43 47 49 50 66 80 85 86
or_expr (64)
    on left: 52, on right: 51
or_list (65)
    on left: 53 54, on right: 52 53
and_expr (66)
    on left: 55, on right: 53 54
and_list (67)
    on left: 56 57, on right: 55 56
binary (68)
    on left: 58 59 60 61 62 63 64 65, on right: 56 57 58 59 60 61 62
    63 64
unary (69)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84, on right: 50 65 67 72 73 74 75 76 77 78 79 80 81 82 83 84
args (70)
    on left: 85 86, on right: 83 86


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   14 struct_specifier: STRUCT . ID '{' $@2 def_list '}'
   15                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . '{' $@1 local_defs stmt_list '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 11

   14 struct_specifier: STRUCT ID . '{' $@2 def_list '}'
   15                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 15 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl '{' . $@1 local_defs stmt_list '}'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 19


State 17

   14 struct_specifier: STRUCT ID '{' . $@2 def_list '}'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 20


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 21
    '('  shift, and go to state 22
    ';'  shift, and go to state 23


State 19

    9 ext_def: func_decl '{' $@1 . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 24
    local_defs  go to state 25


State 20

   14 struct_specifier: STRUCT ID '{' $@2 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 26


State 21

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    const_expr  go to state 38
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 22

   16 func_decl: type_specifier pointers ID '(' . ')'
   17          | type_specifier pointers ID '(' . VOID ')'
   18          | type_specifier pointers ID '(' . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 46
    STRUCT  shift, and go to state 6
    ')'     shift, and go to state 47

    type_specifier    go to state 48
    struct_specifier  go to state 9
    param_list        go to state 49
    param_decl        go to state 50


State 23

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 24

   25 def_list: def_list . def
   33 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 33 (local_defs)

    type_specifier    go to state 51
    struct_specifier  go to state 9
    func_decl         go to state 52
    def               go to state 53


State 25

    9 ext_def: func_decl '{' $@1 local_defs . stmt_list '}'

    $default  reduce using rule 35 (stmt_list)

    stmt_list  go to state 54


State 26

   14 struct_specifier: STRUCT ID '{' $@2 def_list . '}'
   25 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 55

    type_specifier    go to state 51
    struct_specifier  go to state 9
    func_decl         go to state 52
    def               go to state 53


State 27

   76 unary: INCOP . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 56


State 28

   77 unary: DECOP . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 57


State 29

   70 unary: ID .

    $default  reduce using rule 70 (unary)


State 30

   68 unary: INTEGER_CONST .

    $default  reduce using rule 68 (unary)


State 31

   71 unary: STRING .

    $default  reduce using rule 71 (unary)


State 32

   69 unary: CHAR_CONST .

    $default  reduce using rule 69 (unary)


State 33

   78 unary: '&' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 58


State 34

   72 unary: '-' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 59


State 35

   79 unary: '*' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 60


State 36

   73 unary: '!' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 61


State 37

   66 unary: '(' . expr ')'
   67      | '(' . unary ')'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 62
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 63


State 38

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 64


State 39

   49 const_expr: expr .

    $default  reduce using rule 49 (const_expr)


State 40

   51 expr: or_expr .

    $default  reduce using rule 51 (expr)


State 41

   52 or_expr: or_list .
   53 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 65

    $default  reduce using rule 52 (or_expr)


State 42

   54 or_list: and_expr .

    $default  reduce using rule 54 (or_list)


State 43

   55 and_expr: and_list .
   56 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 66

    $default  reduce using rule 55 (and_expr)


State 44

   57 and_list: binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 67
    EQUOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70
    '*'    shift, and go to state 71
    '/'    shift, and go to state 72
    '%'    shift, and go to state 73

    $default  reduce using rule 57 (and_list)


State 45

   50 expr: unary . '=' expr
   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '='       shift, and go to state 77
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 65 (binary)


State 46

   11 type_specifier: VOID .
   17 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 81

    $default  reduce using rule 11 (type_specifier)


State 47

   16 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 16 (func_decl)


State 48

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 82


State 49

   18 func_decl: type_specifier pointers ID '(' param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 83
    ')'  shift, and go to state 84


State 50

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 51

   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 85

    $default  reduce using rule 20 (pointers)

    pointers  go to state 86


State 52

   30 def: func_decl . ';'

    ';'  shift, and go to state 87


State 53

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 54

    9 ext_def: func_decl '{' $@1 local_defs stmt_list . '}'
   34 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 88
    IF             shift, and go to state 89
    WHILE          shift, and go to state 90
    FOR            shift, and go to state 91
    BREAK          shift, and go to state 92
    CONTINUE       shift, and go to state 93
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 94
    '{'            shift, and go to state 95
    '}'            shift, and go to state 96

    compound_stmt  go to state 97
    stmt           go to state 98
    expr           go to state 99
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 55

   14 struct_specifier: STRUCT ID '{' $@2 def_list '}' .

    $default  reduce using rule 14 (struct_specifier)


State 56

   74 unary: unary . INCOP
   75      | unary . DECOP
   76      | INCOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 76 (unary)


State 57

   74 unary: unary . INCOP
   75      | unary . DECOP
   77      | DECOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 77 (unary)


State 58

   74 unary: unary . INCOP
   75      | unary . DECOP
   78      | '&' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 78 (unary)


State 59

   72 unary: '-' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 72 (unary)


State 60

   74 unary: unary . INCOP
   75      | unary . DECOP
   79      | '*' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 79 (unary)


State 61

   73 unary: '!' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 73 (unary)


State 62

   66 unary: '(' expr . ')'

    ')'  shift, and go to state 100


State 63

   50 expr: unary . '=' expr
   65 binary: unary .
   67 unary: '(' unary . ')'
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '='       shift, and go to state 77
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    ')'       shift, and go to state 101
    '.'       shift, and go to state 80

    $default  reduce using rule 65 (binary)


State 64

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 102


State 65

   53 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    and_expr  go to state 103
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 104


State 66

   56 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 105
    unary   go to state 104


State 67

   58 binary: binary RELOP . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 106
    unary   go to state 104


State 68

   59 binary: binary EQUOP . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 107
    unary   go to state 104


State 69

   63 binary: binary '+' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 108
    unary   go to state 104


State 70

   64 binary: binary '-' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 109
    unary   go to state 104


State 71

   60 binary: binary '*' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 110
    unary   go to state 104


State 72

   61 binary: binary '/' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 111
    unary   go to state 104


State 73

   62 binary: binary '%' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 112
    unary   go to state 104


State 74

   74 unary: unary INCOP .

    $default  reduce using rule 74 (unary)


State 75

   75 unary: unary DECOP .

    $default  reduce using rule 75 (unary)


State 76

   82 unary: unary STRUCTOP . ID

    ID  shift, and go to state 113


State 77

   50 expr: unary '=' . expr

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 114
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 78

   80 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 115
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 79

   83 unary: unary '(' . args ')'
   84      | unary '(' . ')'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ')'            shift, and go to state 116

    expr      go to state 117
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45
    args      go to state 118


State 80

   81 unary: unary '.' . ID

    ID  shift, and go to state 119


State 81

   17 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 17 (func_decl)


State 82

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 120


State 83

   22 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 48
    struct_specifier  go to state 9
    param_decl        go to state 121


State 84

   18 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 18 (func_decl)


State 85

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 86

   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 122


State 87

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 88

   38 stmt: RETURN . ';'
   39     | RETURN . expr ';'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 123

    expr      go to state 124
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 89

   41 stmt: IF . '(' expr ')' stmt
   42     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 125


State 90

   43 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 126


State 91

   44 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 127


State 92

   45 stmt: BREAK . ';'

    ';'  shift, and go to state 128


State 93

   46 stmt: CONTINUE . ';'

    ';'  shift, and go to state 129


State 94

   40 stmt: ';' .

    $default  reduce using rule 40 (stmt)


State 95

   32 compound_stmt: '{' . $@3 local_defs stmt_list '}'

    $default  reduce using rule 31 ($@3)

    $@3  go to state 130


State 96

    9 ext_def: func_decl '{' $@1 local_defs stmt_list '}' .

    $default  reduce using rule 9 (ext_def)


State 97

   37 stmt: compound_stmt .

    $default  reduce using rule 37 (stmt)


State 98

   34 stmt_list: stmt_list stmt .

    $default  reduce using rule 34 (stmt_list)


State 99

   36 stmt: expr . ';'

    ';'  shift, and go to state 131


State 100

   66 unary: '(' expr ')' .

    $default  reduce using rule 66 (unary)


State 101

   67 unary: '(' unary ')' .

    $default  reduce using rule 67 (unary)


State 102

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 103

   53 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 53 (or_list)


State 104

   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 65 (binary)


State 105

   56 and_list: and_list LOGICAL_AND binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 67
    EQUOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70
    '*'    shift, and go to state 71
    '/'    shift, and go to state 72
    '%'    shift, and go to state 73

    $default  reduce using rule 56 (and_list)


State 106

   58 binary: binary . RELOP binary
   58       | binary RELOP binary .
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 58 (binary)


State 107

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   59       | binary EQUOP binary .
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70
    '*'    shift, and go to state 71
    '/'    shift, and go to state 72
    '%'    shift, and go to state 73

    $default  reduce using rule 59 (binary)


State 108

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   63       | binary '+' binary .
   64       | binary . '-' binary

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 63 (binary)


State 109

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary
   64       | binary '-' binary .

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 64 (binary)


State 110

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   60       | binary '*' binary .
   61       | binary . '/' binary
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    $default  reduce using rule 60 (binary)


State 111

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   61       | binary '/' binary .
   62       | binary . '%' binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    $default  reduce using rule 61 (binary)


State 112

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '*' binary
   61       | binary . '/' binary
   62       | binary . '%' binary
   62       | binary '%' binary .
   63       | binary . '+' binary
   64       | binary . '-' binary

    $default  reduce using rule 62 (binary)


State 113

   82 unary: unary STRUCTOP ID .

    $default  reduce using rule 82 (unary)


State 114

   50 expr: unary '=' expr .

    $default  reduce using rule 50 (expr)


State 115

   80 unary: unary '[' expr . ']'

    ']'  shift, and go to state 132


State 116

   84 unary: unary '(' ')' .

    $default  reduce using rule 84 (unary)


State 117

   85 args: expr .

    $default  reduce using rule 85 (args)


State 118

   83 unary: unary '(' args . ')'
   86 args: args . ',' expr

    ','  shift, and go to state 133
    ')'  shift, and go to state 134


State 119

   81 unary: unary '.' ID .

    $default  reduce using rule 81 (unary)


State 120

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 135

    $default  reduce using rule 23 (param_decl)


State 121

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 122

   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 136
    '('  shift, and go to state 22
    ';'  shift, and go to state 137


State 123

   38 stmt: RETURN ';' .

    $default  reduce using rule 38 (stmt)


State 124

   39 stmt: RETURN expr . ';'

    ';'  shift, and go to state 138


State 125

   41 stmt: IF '(' . expr ')' stmt
   42     | IF '(' . expr ')' stmt ELSE stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 139
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 126

   43 stmt: WHILE '(' . expr ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 140
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 127

   44 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 141
    expr      go to state 142
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 128

   45 stmt: BREAK ';' .

    $default  reduce using rule 45 (stmt)


State 129

   46 stmt: CONTINUE ';' .

    $default  reduce using rule 46 (stmt)


State 130

   32 compound_stmt: '{' $@3 . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 24
    local_defs  go to state 143


State 131

   36 stmt: expr ';' .

    $default  reduce using rule 36 (stmt)


State 132

   80 unary: unary '[' expr ']' .

    $default  reduce using rule 80 (unary)


State 133

   86 args: args ',' . expr

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 144
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 134

   83 unary: unary '(' args ')' .

    $default  reduce using rule 83 (unary)


State 135

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    const_expr  go to state 145
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 136

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    const_expr  go to state 146
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 137

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 138

   39 stmt: RETURN expr ';' .

    $default  reduce using rule 39 (stmt)


State 139

   41 stmt: IF '(' expr . ')' stmt
   42     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 147


State 140

   43 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 148


State 141

   44 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 149


State 142

   47 expr_e: expr .

    $default  reduce using rule 47 (expr_e)


State 143

   32 compound_stmt: '{' $@3 local_defs . stmt_list '}'

    $default  reduce using rule 35 (stmt_list)

    stmt_list  go to state 150


State 144

   86 args: args ',' expr .

    $default  reduce using rule 86 (args)


State 145

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 151


State 146

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 152


State 147

   41 stmt: IF '(' expr ')' . stmt
   42     | IF '(' expr ')' . stmt ELSE stmt

    RETURN         shift, and go to state 88
    IF             shift, and go to state 89
    WHILE          shift, and go to state 90
    FOR            shift, and go to state 91
    BREAK          shift, and go to state 92
    CONTINUE       shift, and go to state 93
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 94
    '{'            shift, and go to state 95

    compound_stmt  go to state 97
    stmt           go to state 153
    expr           go to state 99
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 148

   43 stmt: WHILE '(' expr ')' . stmt

    RETURN         shift, and go to state 88
    IF             shift, and go to state 89
    WHILE          shift, and go to state 90
    FOR            shift, and go to state 91
    BREAK          shift, and go to state 92
    CONTINUE       shift, and go to state 93
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 94
    '{'            shift, and go to state 95

    compound_stmt  go to state 97
    stmt           go to state 154
    expr           go to state 99
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 149

   44 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 155
    expr      go to state 142
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 150

   32 compound_stmt: '{' $@3 local_defs stmt_list . '}'
   34 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 88
    IF             shift, and go to state 89
    WHILE          shift, and go to state 90
    FOR            shift, and go to state 91
    BREAK          shift, and go to state 92
    CONTINUE       shift, and go to state 93
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 94
    '{'            shift, and go to state 95
    '}'            shift, and go to state 156

    compound_stmt  go to state 97
    stmt           go to state 98
    expr           go to state 99
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 151

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 152

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 157


State 153

   41 stmt: IF '(' expr ')' stmt .
   42     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 158

    $default  reduce using rule 41 (stmt)


State 154

   43 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 43 (stmt)


State 155

   44 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 159


State 156

   32 compound_stmt: '{' $@3 local_defs stmt_list '}' .

    $default  reduce using rule 32 (compound_stmt)


State 157

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 158

   42 stmt: IF '(' expr ')' stmt ELSE . stmt

    RETURN         shift, and go to state 88
    IF             shift, and go to state 89
    WHILE          shift, and go to state 90
    FOR            shift, and go to state 91
    BREAK          shift, and go to state 92
    CONTINUE       shift, and go to state 93
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 94
    '{'            shift, and go to state 95

    compound_stmt  go to state 97
    stmt           go to state 160
    expr           go to state 99
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 159

   44 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 161
    expr      go to state 142
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 160

   42 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 42 (stmt)


State 161

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 162


State 162

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 88
    IF             shift, and go to state 89
    WHILE          shift, and go to state 90
    FOR            shift, and go to state 91
    BREAK          shift, and go to state 92
    CONTINUE       shift, and go to state 93
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 94
    '{'            shift, and go to state 95

    compound_stmt  go to state 97
    stmt           go to state 163
    expr           go to state 99
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 163

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 44 (stmt)
