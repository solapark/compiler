Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 $@2: %empty

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list '}'

   11 type_specifier: TYPE
   12               | VOID
   13               | struct_specifier

   14 $@3: %empty

   15 struct_specifier: STRUCT ID '{' $@3 def_list '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'
   19          | type_specifier pointers ID '(' param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 $@4: %empty

   33 compound_stmt: '{' $@4 local_defs stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'
   38     | compound_stmt
   39     | RETURN ';'

   40 $@5: %empty

   41 stmt: RETURN $@5 expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'

   49 expr_e: expr
   50       | %empty

   51 const_expr: expr

   52 $@6: %empty

   53 expr: unary '=' $@6 expr
   54     | or_expr

   55 or_expr: or_list

   56 or_list: or_list LOGICAL_OR and_expr
   57        | and_expr

   58 and_expr: and_list

   59 and_list: and_list LOGICAL_AND binary
   60         | binary

   61 binary: binary RELOP binary
   62       | binary EQUOP binary
   63       | binary '*' binary
   64       | binary '/' binary
   65       | binary '%' binary
   66       | binary '+' binary
   67       | binary '-' binary
   68       | unary

   69 unary: '(' expr ')'
   70      | '(' unary ')'
   71      | INTEGER_CONST
   72      | CHAR_CONST
   73      | ID
   74      | STRING
   75      | '-' unary
   76      | '!' unary
   77      | unary INCOP
   78      | unary DECOP
   79      | INCOP unary
   80      | DECOP unary
   81      | '&' unary
   82      | '*' unary
   83      | unary '[' expr ']'
   84      | unary '.' ID
   85      | unary STRUCTOP ID
   86      | unary '(' args ')'
   87      | unary '(' ')'

   88 args: expr
   89     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'%' (37) 65
'&' (38) 81
'(' (40) 17 18 19 43 44 45 46 69 70 86 87
')' (41) 17 18 19 43 44 45 46 69 70 86 87
'*' (42) 20 63 82
'+' (43) 66
',' (44) 23 89
'-' (45) 67 75
'.' (46) 84
'/' (47) 64
';' (59) 4 5 6 7 28 29 30 31 37 39 41 42 46 47 48
'=' (61) 53
'[' (91) 5 25 29 83
']' (93) 5 25 29 83
'{' (123) 10 15 33
'}' (125) 10 15 33
error (256)
TYPE (258) 11
VOID (259) 12 18
STRUCT (260) 15 16
RETURN (261) 39 41
IF (262) 43 44
ELSE (263) 44
WHILE (264) 45
FOR (265) 46
BREAK (266) 47
CONTINUE (267) 48
LOGICAL_OR (268) 56
LOGICAL_AND (269) 59
RELOP (270) 61
EQUOP (271) 62
INCOP (272) 77 79
DECOP (273) 78 80
STRUCTOP (274) 85
ID (275) 4 5 15 16 17 18 19 24 25 28 29 73 84 85
INTEGER_CONST (276) 71
STRING (277) 74
CHAR_CONST (278) 72
IFSIMPLE (279)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
ext_def_list (44)
    on left: 2 3, on right: 1 2
ext_def (45)
    on left: 4 5 6 7 10, on right: 2
$@1 (46)
    on left: 8, on right: 10
$@2 (47)
    on left: 9, on right: 10
type_specifier (48)
    on left: 11 12 13, on right: 4 5 7 17 18 19 24 25 28 29 30
struct_specifier (49)
    on left: 15 16, on right: 13
$@3 (50)
    on left: 14, on right: 15
func_decl (51)
    on left: 17 18 19, on right: 6 10 31
pointers (52)
    on left: 20 21, on right: 4 5 17 18 19 24 25 28 29
param_list (53)
    on left: 22 23, on right: 19 23
param_decl (54)
    on left: 24 25, on right: 22 23
def_list (55)
    on left: 26 27, on right: 15 26 34
def (56)
    on left: 28 29 30 31, on right: 26
compound_stmt (57)
    on left: 33, on right: 38
$@4 (58)
    on left: 32, on right: 33
local_defs (59)
    on left: 34, on right: 10 33
stmt_list (60)
    on left: 35 36, on right: 10 33 35
stmt (61)
    on left: 37 38 39 41 42 43 44 45 46 47 48, on right: 35 43 44 45
    46
$@5 (62)
    on left: 40, on right: 41
expr_e (63)
    on left: 49 50, on right: 46
const_expr (64)
    on left: 51, on right: 5 25 29
expr (65)
    on left: 53 54, on right: 37 41 43 44 45 49 51 53 69 83 88 89
$@6 (66)
    on left: 52, on right: 53
or_expr (67)
    on left: 55, on right: 54
or_list (68)
    on left: 56 57, on right: 55 56
and_expr (69)
    on left: 58, on right: 56 57
and_list (70)
    on left: 59 60, on right: 58 59
binary (71)
    on left: 61 62 63 64 65 66 67 68, on right: 59 60 61 62 63 64 65
    66 67
unary (72)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87, on right: 53 68 70 75 76 77 78 79 80 81 82 83 84 85 86 87
args (73)
    on left: 88 89, on right: 86 89


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 type_specifier: TYPE .

    $default  reduce using rule 11 (type_specifier)


State 5

   12 type_specifier: VOID .

    $default  reduce using rule 12 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@3 def_list '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   13 type_specifier: struct_specifier .

    $default  reduce using rule 13 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
   10        | func_decl . '{' $@1 local_defs $@2 stmt_list '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' $@3 def_list '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   10 ext_def: func_decl '{' . $@1 local_defs $@2 stmt_list '}'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 19


State 17

   15 struct_specifier: STRUCT ID '{' . $@3 def_list '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 20


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 21
    '('  shift, and go to state 22
    ';'  shift, and go to state 23


State 19

   10 ext_def: func_decl '{' $@1 . local_defs $@2 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 24
    local_defs  go to state 25


State 20

   15 struct_specifier: STRUCT ID '{' $@3 . def_list '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 21

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    const_expr  go to state 38
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 22

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 46
    STRUCT  shift, and go to state 6
    ')'     shift, and go to state 47

    type_specifier    go to state 48
    struct_specifier  go to state 9
    param_list        go to state 49
    param_decl        go to state 50


State 23

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 24

   26 def_list: def_list . def
   34 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 51
    struct_specifier  go to state 9
    func_decl         go to state 52
    def               go to state 53


State 25

   10 ext_def: func_decl '{' $@1 local_defs . $@2 stmt_list '}'

    $default  reduce using rule 9 ($@2)

    $@2  go to state 54


State 26

   15 struct_specifier: STRUCT ID '{' $@3 def_list . '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 55

    type_specifier    go to state 51
    struct_specifier  go to state 9
    func_decl         go to state 52
    def               go to state 53


State 27

   79 unary: INCOP . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 56


State 28

   80 unary: DECOP . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 57


State 29

   73 unary: ID .

    $default  reduce using rule 73 (unary)


State 30

   71 unary: INTEGER_CONST .

    $default  reduce using rule 71 (unary)


State 31

   74 unary: STRING .

    $default  reduce using rule 74 (unary)


State 32

   72 unary: CHAR_CONST .

    $default  reduce using rule 72 (unary)


State 33

   81 unary: '&' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 58


State 34

   75 unary: '-' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 59


State 35

   82 unary: '*' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 60


State 36

   76 unary: '!' . unary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    unary  go to state 61


State 37

   69 unary: '(' . expr ')'
   70      | '(' . unary ')'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 62
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 63


State 38

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 64


State 39

   51 const_expr: expr .

    $default  reduce using rule 51 (const_expr)


State 40

   54 expr: or_expr .

    $default  reduce using rule 54 (expr)


State 41

   55 or_expr: or_list .
   56 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 65

    $default  reduce using rule 55 (or_expr)


State 42

   57 or_list: and_expr .

    $default  reduce using rule 57 (or_list)


State 43

   58 and_expr: and_list .
   59 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 66

    $default  reduce using rule 58 (and_expr)


State 44

   60 and_list: binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary

    RELOP  shift, and go to state 67
    EQUOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70
    '*'    shift, and go to state 71
    '/'    shift, and go to state 72
    '%'    shift, and go to state 73

    $default  reduce using rule 60 (and_list)


State 45

   53 expr: unary . '=' $@6 expr
   68 binary: unary .
   77 unary: unary . INCOP
   78      | unary . DECOP
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '='       shift, and go to state 77
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 68 (binary)


State 46

   12 type_specifier: VOID .
   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 81

    $default  reduce using rule 12 (type_specifier)


State 47

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 48

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 82


State 49

   19 func_decl: type_specifier pointers ID '(' param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 83
    ')'  shift, and go to state 84


State 50

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 51

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 85

    $default  reduce using rule 21 (pointers)

    pointers  go to state 86


State 52

   31 def: func_decl . ';'

    ';'  shift, and go to state 87


State 53

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 54

   10 ext_def: func_decl '{' $@1 local_defs $@2 . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 88


State 55

   15 struct_specifier: STRUCT ID '{' $@3 def_list '}' .

    $default  reduce using rule 15 (struct_specifier)


State 56

   77 unary: unary . INCOP
   78      | unary . DECOP
   79      | INCOP unary .
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 79 (unary)


State 57

   77 unary: unary . INCOP
   78      | unary . DECOP
   80      | DECOP unary .
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 80 (unary)


State 58

   77 unary: unary . INCOP
   78      | unary . DECOP
   81      | '&' unary .
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 81 (unary)


State 59

   75 unary: '-' unary .
   77      | unary . INCOP
   78      | unary . DECOP
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 75 (unary)


State 60

   77 unary: unary . INCOP
   78      | unary . DECOP
   82      | '*' unary .
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 82 (unary)


State 61

   76 unary: '!' unary .
   77      | unary . INCOP
   78      | unary . DECOP
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 76 (unary)


State 62

   69 unary: '(' expr . ')'

    ')'  shift, and go to state 89


State 63

   53 expr: unary . '=' $@6 expr
   68 binary: unary .
   70 unary: '(' unary . ')'
   77      | unary . INCOP
   78      | unary . DECOP
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '='       shift, and go to state 77
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    ')'       shift, and go to state 90
    '.'       shift, and go to state 80

    $default  reduce using rule 68 (binary)


State 64

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 91


State 65

   56 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    and_expr  go to state 92
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 93


State 66

   59 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 94
    unary   go to state 93


State 67

   61 binary: binary RELOP . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 95
    unary   go to state 93


State 68

   62 binary: binary EQUOP . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 96
    unary   go to state 93


State 69

   66 binary: binary '+' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 97
    unary   go to state 93


State 70

   67 binary: binary '-' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 98
    unary   go to state 93


State 71

   63 binary: binary '*' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 99
    unary   go to state 93


State 72

   64 binary: binary '/' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 100
    unary   go to state 93


State 73

   65 binary: binary '%' . binary

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    binary  go to state 101
    unary   go to state 93


State 74

   77 unary: unary INCOP .

    $default  reduce using rule 77 (unary)


State 75

   78 unary: unary DECOP .

    $default  reduce using rule 78 (unary)


State 76

   85 unary: unary STRUCTOP . ID

    ID  shift, and go to state 102


State 77

   53 expr: unary '=' . $@6 expr

    $default  reduce using rule 52 ($@6)

    $@6  go to state 103


State 78

   83 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 104
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 79

   86 unary: unary '(' . args ')'
   87      | unary '(' . ')'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ')'            shift, and go to state 105

    expr      go to state 106
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45
    args      go to state 107


State 80

   84 unary: unary '.' . ID

    ID  shift, and go to state 108


State 81

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 82

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 109


State 83

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 48
    struct_specifier  go to state 9
    param_decl        go to state 110


State 84

   19 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 85

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 86

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 111


State 87

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 88

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 118
    '{'            shift, and go to state 119
    '}'            shift, and go to state 120

    compound_stmt  go to state 121
    stmt           go to state 122
    expr           go to state 123
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 89

   69 unary: '(' expr ')' .

    $default  reduce using rule 69 (unary)


State 90

   70 unary: '(' unary ')' .

    $default  reduce using rule 70 (unary)


State 91

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 92

   56 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 56 (or_list)


State 93

   68 binary: unary .
   77 unary: unary . INCOP
   78      | unary . DECOP
   83      | unary . '[' expr ']'
   84      | unary . '.' ID
   85      | unary . STRUCTOP ID
   86      | unary . '(' args ')'
   87      | unary . '(' ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    STRUCTOP  shift, and go to state 76
    '['       shift, and go to state 78
    '('       shift, and go to state 79
    '.'       shift, and go to state 80

    $default  reduce using rule 68 (binary)


State 94

   59 and_list: and_list LOGICAL_AND binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary

    RELOP  shift, and go to state 67
    EQUOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70
    '*'    shift, and go to state 71
    '/'    shift, and go to state 72
    '%'    shift, and go to state 73

    $default  reduce using rule 59 (and_list)


State 95

   61 binary: binary . RELOP binary
   61       | binary RELOP binary .
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 61 (binary)


State 96

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   62       | binary EQUOP binary .
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70
    '*'    shift, and go to state 71
    '/'    shift, and go to state 72
    '%'    shift, and go to state 73

    $default  reduce using rule 62 (binary)


State 97

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   66       | binary '+' binary .
   67       | binary . '-' binary

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 66 (binary)


State 98

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary
   67       | binary '-' binary .

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 67 (binary)


State 99

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   63       | binary '*' binary .
   64       | binary . '/' binary
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary

    $default  reduce using rule 63 (binary)


State 100

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   64       | binary '/' binary .
   65       | binary . '%' binary
   66       | binary . '+' binary
   67       | binary . '-' binary

    $default  reduce using rule 64 (binary)


State 101

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '*' binary
   64       | binary . '/' binary
   65       | binary . '%' binary
   65       | binary '%' binary .
   66       | binary . '+' binary
   67       | binary . '-' binary

    $default  reduce using rule 65 (binary)


State 102

   85 unary: unary STRUCTOP ID .

    $default  reduce using rule 85 (unary)


State 103

   53 expr: unary '=' $@6 . expr

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 124
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 104

   83 unary: unary '[' expr . ']'

    ']'  shift, and go to state 125


State 105

   87 unary: unary '(' ')' .

    $default  reduce using rule 87 (unary)


State 106

   88 args: expr .

    $default  reduce using rule 88 (args)


State 107

   86 unary: unary '(' args . ')'
   89 args: args . ',' expr

    ','  shift, and go to state 126
    ')'  shift, and go to state 127


State 108

   84 unary: unary '.' ID .

    $default  reduce using rule 84 (unary)


State 109

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 128

    $default  reduce using rule 24 (param_decl)


State 110

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 111

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 129
    '('  shift, and go to state 22
    ';'  shift, and go to state 130


State 112

   39 stmt: RETURN . ';'
   41     | RETURN . $@5 expr ';'

    ';'  shift, and go to state 131

    $default  reduce using rule 40 ($@5)

    $@5  go to state 132


State 113

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 133


State 114

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 134


State 115

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 135


State 116

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 136


State 117

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 137


State 118

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 119

   33 compound_stmt: '{' . $@4 local_defs stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 138


State 120

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list '}' .

    $default  reduce using rule 10 (ext_def)


State 121

   38 stmt: compound_stmt .

    $default  reduce using rule 38 (stmt)


State 122

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 123

   37 stmt: expr . ';'

    ';'  shift, and go to state 139


State 124

   53 expr: unary '=' $@6 expr .

    $default  reduce using rule 53 (expr)


State 125

   83 unary: unary '[' expr ']' .

    $default  reduce using rule 83 (unary)


State 126

   89 args: args ',' . expr

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 140
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 127

   86 unary: unary '(' args ')' .

    $default  reduce using rule 86 (unary)


State 128

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    const_expr  go to state 141
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 129

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    const_expr  go to state 142
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 130

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 131

   39 stmt: RETURN ';' .

    $default  reduce using rule 39 (stmt)


State 132

   41 stmt: RETURN $@5 . expr ';'

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 143
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 133

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 144
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 134

   45 stmt: WHILE '(' . expr ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    expr      go to state 145
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 135

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 146
    expr      go to state 147
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 136

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 137

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 138

   33 compound_stmt: '{' $@4 . local_defs stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 24
    local_defs  go to state 148


State 139

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 140

   89 args: args ',' expr .

    $default  reduce using rule 89 (args)


State 141

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 149


State 142

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 150


State 143

   41 stmt: RETURN $@5 expr . ';'

    ';'  shift, and go to state 151


State 144

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 152


State 145

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 153


State 146

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 154


State 147

   49 expr_e: expr .

    $default  reduce using rule 49 (expr_e)


State 148

   33 compound_stmt: '{' $@4 local_defs . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 155


State 149

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 150

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 156


State 151

   41 stmt: RETURN $@5 expr ';' .

    $default  reduce using rule 41 (stmt)


State 152

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 118
    '{'            shift, and go to state 119

    compound_stmt  go to state 121
    stmt           go to state 157
    expr           go to state 123
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 153

   45 stmt: WHILE '(' expr ')' . stmt

    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 118
    '{'            shift, and go to state 119

    compound_stmt  go to state 121
    stmt           go to state 158
    expr           go to state 123
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 154

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 159
    expr      go to state 147
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 155

   33 compound_stmt: '{' $@4 local_defs stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 118
    '{'            shift, and go to state 119
    '}'            shift, and go to state 160

    compound_stmt  go to state 121
    stmt           go to state 122
    expr           go to state 123
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 156

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 157

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 161

    $default  reduce using rule 43 (stmt)


State 158

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 159

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 162


State 160

   33 compound_stmt: '{' $@4 local_defs stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 161

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 118
    '{'            shift, and go to state 119

    compound_stmt  go to state 121
    stmt           go to state 163
    expr           go to state 123
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 162

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 164
    expr      go to state 147
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 163

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 164

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 165


State 165

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    INCOP          shift, and go to state 27
    DECOP          shift, and go to state 28
    ID             shift, and go to state 29
    INTEGER_CONST  shift, and go to state 30
    STRING         shift, and go to state 31
    CHAR_CONST     shift, and go to state 32
    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 118
    '{'            shift, and go to state 119

    compound_stmt  go to state 121
    stmt           go to state 166
    expr           go to state 123
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 166

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
