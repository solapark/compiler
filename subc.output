Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'
   17          | type_specifier pointers ID '(' param_list ')'

   18 pointers: '*'
   19         | %empty

   20 param_list: param_decl
   21           | param_list ',' param_decl

   22 param_decl: type_specifier pointers ID
   23           | type_specifier pointers ID '[' const_expr ']'

   24 def_list: def_list def
   25         | %empty

   26 def: type_specifier pointers ID ';'
   27    | type_specifier pointers ID '[' const_expr ']' ';'
   28    | type_specifier ';'
   29    | func_decl ';'

   30 $@2: %empty

   31 compound_stmt: '{' $@2 local_defs stmt_list '}'

   32 local_defs: def_list

   33 stmt_list: stmt_list stmt
   34          | %empty

   35 stmt: expr ';'
   36     | compound_stmt
   37     | RETURN ';'
   38     | RETURN expr ';'
   39     | ';'
   40     | IF '(' expr ')' stmt
   41     | IF '(' expr ')' stmt ELSE stmt
   42     | WHILE '(' expr ')' stmt
   43     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   44     | BREAK ';'
   45     | CONTINUE ';'

   46 expr_e: expr
   47       | %empty

   48 const_expr: expr

   49 expr: unary '=' expr
   50     | or_expr

   51 or_expr: or_list

   52 or_list: or_list LOGICAL_OR and_expr
   53        | and_expr

   54 and_expr: and_list

   55 and_list: and_list LOGICAL_AND binary
   56         | binary

   57 binary: binary RELOP binary
   58       | binary EQUOP binary
   59       | binary '+' binary
   60       | binary '-' binary
   61       | unary

   62 unary: '(' expr ')'
   63      | '(' unary ')'
   64      | INTEGER_CONST
   65      | CHAR_CONST
   66      | ID
   67      | STRING
   68      | '-' unary
   69      | '!' unary
   70      | unary INCOP
   71      | unary DECOP
   72      | INCOP unary
   73      | DECOP unary
   74      | '&' unary
   75      | '*' unary
   76      | unary '[' expr ']'
   77      | unary '.' ID
   78      | unary STRUCTOP ID
   79      | unary '(' args ')'
   80      | unary '(' ')'

   81 args: expr
   82     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69
'&' (38) 74
'(' (40) 15 16 17 40 41 42 43 62 63 79 80
')' (41) 15 16 17 40 41 42 43 62 63 79 80
'*' (42) 18 75
'+' (43) 59
',' (44) 21 82
'-' (45) 60 68
'.' (46) 77
';' (59) 4 5 6 7 26 27 28 29 35 37 38 39 43 44 45
'=' (61) 49
'[' (91) 5 23 27 76
']' (93) 5 23 27 76
'{' (123) 13 31
'}' (125) 13 31
error (256)
TYPE (258) 9
VOID (259) 10 16
STRUCT (260) 13 14
RETURN (261) 37 38
IF (262) 40 41
ELSE (263) 41
WHILE (264) 42
FOR (265) 43
BREAK (266) 44
CONTINUE (267) 45
LOGICAL_OR (268) 52
LOGICAL_AND (269) 55
RELOP (270) 57
EQUOP (271) 58
INCOP (272) 70 72
DECOP (273) 71 73
STRUCTOP (274) 78
ID (275) 4 5 13 14 15 16 17 22 23 26 27 66 77 78
INTEGER_CONST (276) 64
STRING (277) 67
CHAR_CONST (278) 65
IFSIMPLE (279)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 8, on right: 2
type_specifier (44)
    on left: 9 10 11, on right: 4 5 7 15 16 17 22 23 26 27 28
struct_specifier (45)
    on left: 13 14, on right: 11
$@1 (46)
    on left: 12, on right: 13
func_decl (47)
    on left: 15 16 17, on right: 6 8 29
pointers (48)
    on left: 18 19, on right: 4 5 15 16 17 22 23 26 27
param_list (49)
    on left: 20 21, on right: 17 21
param_decl (50)
    on left: 22 23, on right: 20 21
def_list (51)
    on left: 24 25, on right: 13 24 32
def (52)
    on left: 26 27 28 29, on right: 24
compound_stmt (53)
    on left: 31, on right: 8 36
$@2 (54)
    on left: 30, on right: 31
local_defs (55)
    on left: 32, on right: 31
stmt_list (56)
    on left: 33 34, on right: 31 33
stmt (57)
    on left: 35 36 37 38 39 40 41 42 43 44 45, on right: 33 40 41 42
    43
expr_e (58)
    on left: 46 47, on right: 43
const_expr (59)
    on left: 48, on right: 5 23 27
expr (60)
    on left: 49 50, on right: 35 38 40 41 42 46 48 49 62 76 81 82
or_expr (61)
    on left: 51, on right: 50
or_list (62)
    on left: 52 53, on right: 51 52
and_expr (63)
    on left: 54, on right: 52 53
and_list (64)
    on left: 55 56, on right: 54 55
binary (65)
    on left: 57 58 59 60 61, on right: 55 56 57 58 59 60
unary (66)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80, on right: 49 61 63 68 69 70 71 72 73 74 75 76 77 78 79 80
args (67)
    on left: 81 82, on right: 79 82


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   17          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 19 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   18 pointers: '*' .

    $default  reduce using rule 18 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   17          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   31 compound_stmt: '{' . $@2 local_defs stmt_list '}'

    $default  reduce using rule 30 ($@2)

    $@2  go to state 20


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 21


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   17          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 20

   31 compound_stmt: '{' $@2 . local_defs stmt_list '}'

    $default  reduce using rule 25 (def_list)

    def_list    go to state 25
    local_defs  go to state 26


State 21

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 25 (def_list)

    def_list  go to state 27


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    const_expr  go to state 39
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 23

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   17          | type_specifier pointers ID '(' . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 47
    STRUCT  shift, and go to state 6
    ')'     shift, and go to state 48

    type_specifier    go to state 49
    struct_specifier  go to state 9
    param_list        go to state 50
    param_decl        go to state 51


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   24 def_list: def_list . def
   32 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 32 (local_defs)

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 53
    def               go to state 54


State 26

   31 compound_stmt: '{' $@2 local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 55


State 27

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   24 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 56

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 53
    def               go to state 54


State 28

   72 unary: INCOP . unary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    unary  go to state 57


State 29

   73 unary: DECOP . unary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    unary  go to state 58


State 30

   66 unary: ID .

    $default  reduce using rule 66 (unary)


State 31

   64 unary: INTEGER_CONST .

    $default  reduce using rule 64 (unary)


State 32

   67 unary: STRING .

    $default  reduce using rule 67 (unary)


State 33

   65 unary: CHAR_CONST .

    $default  reduce using rule 65 (unary)


State 34

   74 unary: '&' . unary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    unary  go to state 59


State 35

   68 unary: '-' . unary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    unary  go to state 60


State 36

   75 unary: '*' . unary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    unary  go to state 61


State 37

   69 unary: '!' . unary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    unary  go to state 62


State 38

   62 unary: '(' . expr ')'
   63      | '(' . unary ')'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    expr      go to state 63
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 64


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 65


State 40

   48 const_expr: expr .

    $default  reduce using rule 48 (const_expr)


State 41

   50 expr: or_expr .

    $default  reduce using rule 50 (expr)


State 42

   51 or_expr: or_list .
   52 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 66

    $default  reduce using rule 51 (or_expr)


State 43

   53 or_list: and_expr .

    $default  reduce using rule 53 (or_list)


State 44

   54 and_expr: and_list .
   55 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 67

    $default  reduce using rule 54 (and_expr)


State 45

   56 and_list: binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 68
    EQUOP  shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71

    $default  reduce using rule 56 (and_list)


State 46

   49 expr: unary . '=' expr
   61 binary: unary .
   70 unary: unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '='       shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 61 (binary)


State 47

   10 type_specifier: VOID .
   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 79

    $default  reduce using rule 10 (type_specifier)


State 48

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 49

   22 param_decl: type_specifier . pointers ID
   23           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 19 (pointers)

    pointers  go to state 80


State 50

   17 func_decl: type_specifier pointers ID '(' param_list . ')'
   21 param_list: param_list . ',' param_decl

    ','  shift, and go to state 81
    ')'  shift, and go to state 82


State 51

   20 param_list: param_decl .

    $default  reduce using rule 20 (param_list)


State 52

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   17          | type_specifier . pointers ID '(' param_list ')'
   26 def: type_specifier . pointers ID ';'
   27    | type_specifier . pointers ID '[' const_expr ']' ';'
   28    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 83

    $default  reduce using rule 19 (pointers)

    pointers  go to state 84


State 53

   29 def: func_decl . ';'

    ';'  shift, and go to state 85


State 54

   24 def_list: def_list def .

    $default  reduce using rule 24 (def_list)


State 55

   31 compound_stmt: '{' $@2 local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ';'            shift, and go to state 92
    '{'            shift, and go to state 16
    '}'            shift, and go to state 93

    compound_stmt  go to state 94
    stmt           go to state 95
    expr           go to state 96
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 56

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 57

   70 unary: unary . INCOP
   71      | unary . DECOP
   72      | INCOP unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 72 (unary)


State 58

   70 unary: unary . INCOP
   71      | unary . DECOP
   73      | DECOP unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 73 (unary)


State 59

   70 unary: unary . INCOP
   71      | unary . DECOP
   74      | '&' unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 74 (unary)


State 60

   68 unary: '-' unary .
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 68 (unary)


State 61

   70 unary: unary . INCOP
   71      | unary . DECOP
   75      | '*' unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 75 (unary)


State 62

   69 unary: '!' unary .
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 69 (unary)


State 63

   62 unary: '(' expr . ')'

    ')'  shift, and go to state 97


State 64

   49 expr: unary . '=' expr
   61 binary: unary .
   63 unary: '(' unary . ')'
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '='       shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    ')'       shift, and go to state 98
    '.'       shift, and go to state 78

    $default  reduce using rule 61 (binary)


State 65

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 99


State 66

   52 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    and_expr  go to state 100
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 101


State 67

   55 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    binary  go to state 102
    unary   go to state 101


State 68

   57 binary: binary RELOP . binary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    binary  go to state 103
    unary   go to state 101


State 69

   58 binary: binary EQUOP . binary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    binary  go to state 104
    unary   go to state 101


State 70

   59 binary: binary '+' . binary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    binary  go to state 105
    unary   go to state 101


State 71

   60 binary: binary '-' . binary

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    binary  go to state 106
    unary   go to state 101


State 72

   70 unary: unary INCOP .

    $default  reduce using rule 70 (unary)


State 73

   71 unary: unary DECOP .

    $default  reduce using rule 71 (unary)


State 74

   78 unary: unary STRUCTOP . ID

    ID  shift, and go to state 107


State 75

   49 expr: unary '=' . expr

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    expr      go to state 108
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 76

   76 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    expr      go to state 109
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 77

   79 unary: unary '(' . args ')'
   80      | unary '(' . ')'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ')'            shift, and go to state 110

    expr      go to state 111
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 112


State 78

   77 unary: unary '.' . ID

    ID  shift, and go to state 113


State 79

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 80

   22 param_decl: type_specifier pointers . ID
   23           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 114


State 81

   21 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 49
    struct_specifier  go to state 9
    param_decl        go to state 115


State 82

   17 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 17 (func_decl)


State 83

   28 def: type_specifier ';' .

    $default  reduce using rule 28 (def)


State 84

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   17          | type_specifier pointers . ID '(' param_list ')'
   26 def: type_specifier pointers . ID ';'
   27    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 116


State 85

   29 def: func_decl ';' .

    $default  reduce using rule 29 (def)


State 86

   37 stmt: RETURN . ';'
   38     | RETURN . expr ';'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ';'            shift, and go to state 117

    expr      go to state 118
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 87

   40 stmt: IF . '(' expr ')' stmt
   41     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 119


State 88

   42 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 120


State 89

   43 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 121


State 90

   44 stmt: BREAK . ';'

    ';'  shift, and go to state 122


State 91

   45 stmt: CONTINUE . ';'

    ';'  shift, and go to state 123


State 92

   39 stmt: ';' .

    $default  reduce using rule 39 (stmt)


State 93

   31 compound_stmt: '{' $@2 local_defs stmt_list '}' .

    $default  reduce using rule 31 (compound_stmt)


State 94

   36 stmt: compound_stmt .

    $default  reduce using rule 36 (stmt)


State 95

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 96

   35 stmt: expr . ';'

    ';'  shift, and go to state 124


State 97

   62 unary: '(' expr ')' .

    $default  reduce using rule 62 (unary)


State 98

   63 unary: '(' unary ')' .

    $default  reduce using rule 63 (unary)


State 99

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 100

   52 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 52 (or_list)


State 101

   61 binary: unary .
   70 unary: unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    STRUCTOP  shift, and go to state 74
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78

    $default  reduce using rule 61 (binary)


State 102

   55 and_list: and_list LOGICAL_AND binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 68
    EQUOP  shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71

    $default  reduce using rule 55 (and_list)


State 103

   57 binary: binary . RELOP binary
   57       | binary RELOP binary .
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 57 (binary)


State 104

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   58       | binary EQUOP binary .
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 68
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71

    $default  reduce using rule 58 (binary)


State 105

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   59       | binary '+' binary .
   60       | binary . '-' binary

    $default  reduce using rule 59 (binary)


State 106

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary
   60       | binary '-' binary .

    $default  reduce using rule 60 (binary)


State 107

   78 unary: unary STRUCTOP ID .

    $default  reduce using rule 78 (unary)


State 108

   49 expr: unary '=' expr .

    $default  reduce using rule 49 (expr)


State 109

   76 unary: unary '[' expr . ']'

    ']'  shift, and go to state 125


State 110

   80 unary: unary '(' ')' .

    $default  reduce using rule 80 (unary)


State 111

   81 args: expr .

    $default  reduce using rule 81 (args)


State 112

   79 unary: unary '(' args . ')'
   82 args: args . ',' expr

    ','  shift, and go to state 126
    ')'  shift, and go to state 127


State 113

   77 unary: unary '.' ID .

    $default  reduce using rule 77 (unary)


State 114

   22 param_decl: type_specifier pointers ID .
   23           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 128

    $default  reduce using rule 22 (param_decl)


State 115

   21 param_list: param_list ',' param_decl .

    $default  reduce using rule 21 (param_list)


State 116

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   17          | type_specifier pointers ID . '(' param_list ')'
   26 def: type_specifier pointers ID . ';'
   27    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 129
    '('  shift, and go to state 23
    ';'  shift, and go to state 130


State 117

   37 stmt: RETURN ';' .

    $default  reduce using rule 37 (stmt)


State 118

   38 stmt: RETURN expr . ';'

    ';'  shift, and go to state 131


State 119

   40 stmt: IF '(' . expr ')' stmt
   41     | IF '(' . expr ')' stmt ELSE stmt

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    expr      go to state 132
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 120

   42 stmt: WHILE '(' . expr ')' stmt

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    expr      go to state 133
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 121

   43 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 134
    expr      go to state 135
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 122

   44 stmt: BREAK ';' .

    $default  reduce using rule 44 (stmt)


State 123

   45 stmt: CONTINUE ';' .

    $default  reduce using rule 45 (stmt)


State 124

   35 stmt: expr ';' .

    $default  reduce using rule 35 (stmt)


State 125

   76 unary: unary '[' expr ']' .

    $default  reduce using rule 76 (unary)


State 126

   82 args: args ',' . expr

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    expr      go to state 136
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 127

   79 unary: unary '(' args ')' .

    $default  reduce using rule 79 (unary)


State 128

   23 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    const_expr  go to state 137
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 129

   27 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    const_expr  go to state 138
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 130

   26 def: type_specifier pointers ID ';' .

    $default  reduce using rule 26 (def)


State 131

   38 stmt: RETURN expr ';' .

    $default  reduce using rule 38 (stmt)


State 132

   40 stmt: IF '(' expr . ')' stmt
   41     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 139


State 133

   42 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 140


State 134

   43 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 141


State 135

   46 expr_e: expr .

    $default  reduce using rule 46 (expr_e)


State 136

   82 args: args ',' expr .

    $default  reduce using rule 82 (args)


State 137

   23 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 142


State 138

   27 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 143


State 139

   40 stmt: IF '(' expr ')' . stmt
   41     | IF '(' expr ')' . stmt ELSE stmt

    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ';'            shift, and go to state 92
    '{'            shift, and go to state 16

    compound_stmt  go to state 94
    stmt           go to state 144
    expr           go to state 96
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 140

   42 stmt: WHILE '(' expr ')' . stmt

    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ';'            shift, and go to state 92
    '{'            shift, and go to state 16

    compound_stmt  go to state 94
    stmt           go to state 145
    expr           go to state 96
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 141

   43 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 146
    expr      go to state 135
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 142

   23 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 23 (param_decl)


State 143

   27 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 147


State 144

   40 stmt: IF '(' expr ')' stmt .
   41     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 148

    $default  reduce using rule 40 (stmt)


State 145

   42 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 42 (stmt)


State 146

   43 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 149


State 147

   27 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 27 (def)


State 148

   41 stmt: IF '(' expr ')' stmt ELSE . stmt

    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ';'            shift, and go to state 92
    '{'            shift, and go to state 16

    compound_stmt  go to state 94
    stmt           go to state 150
    expr           go to state 96
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 149

   43 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 151
    expr      go to state 135
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 150

   41 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 41 (stmt)


State 151

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 152


State 152

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    INCOP          shift, and go to state 28
    DECOP          shift, and go to state 29
    ID             shift, and go to state 30
    INTEGER_CONST  shift, and go to state 31
    STRING         shift, and go to state 32
    CHAR_CONST     shift, and go to state 33
    '&'            shift, and go to state 34
    '-'            shift, and go to state 35
    '*'            shift, and go to state 36
    '!'            shift, and go to state 37
    '('            shift, and go to state 38
    ';'            shift, and go to state 92
    '{'            shift, and go to state 16

    compound_stmt  go to state 94
    stmt           go to state 153
    expr           go to state 96
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 153

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 43 (stmt)
