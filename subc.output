State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl '{' local_defs stmt_list '}'

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'

   17 @2: %empty

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')'

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 $@3: %empty

   32 compound_stmt: '{' $@3 local_defs stmt_list '}'

   33 local_defs: def_list

   34 stmt_list: stmt_list stmt
   35          | %empty

   36 stmt: expr ';'
   37     | compound_stmt
   38     | RETURN ';'
   39     | RETURN expr ';'
   40     | ';'
   41     | IF '(' expr ')' stmt
   42     | IF '(' expr ')' stmt ELSE stmt
   43     | WHILE '(' expr ')' stmt
   44     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   45     | BREAK ';'
   46     | CONTINUE ';'

   47 expr_e: expr
   48       | %empty

   49 const_expr: expr

   50 expr: unary '=' expr
   51     | or_expr

   52 or_expr: or_list

   53 or_list: or_list LOGICAL_OR and_expr
   54        | and_expr

   55 and_expr: and_list

   56 and_list: and_list LOGICAL_AND binary
   57         | binary

   58 binary: binary RELOP binary
   59       | binary EQUOP binary
   60       | binary '+' binary
   61       | binary '-' binary
   62       | unary

   63 unary: '(' expr ')'
   64      | '(' unary ')'
   65      | INTEGER_CONST
   66      | CHAR_CONST
   67      | ID
   68      | STRING
   69      | '-' unary
   70      | '!' unary
   71      | unary INCOP
   72      | unary DECOP
   73      | INCOP unary
   74      | DECOP unary
   75      | '&' unary
   76      | '*' unary
   77      | unary '[' expr ']'
   78      | unary '.' ID
   79      | unary STRUCTOP ID
   80      | unary '(' args ')'
   81      | unary '(' ')'

   82 args: expr
   83     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 70
'&' (38) 75
'(' (40) 15 16 18 41 42 43 44 63 64 80 81
')' (41) 15 16 18 41 42 43 44 63 64 80 81
'*' (42) 19 76
'+' (43) 60
',' (44) 22 83
'-' (45) 61 69
'.' (46) 78
';' (59) 4 5 6 7 27 28 29 30 36 38 39 40 44 45 46
'=' (61) 50
'[' (91) 5 24 28 77
']' (93) 5 24 28 77
'{' (123) 8 13 32
'}' (125) 8 13 32
error (256)
TYPE (258) 9
VOID (259) 10 16
STRUCT (260) 13 14
RETURN (261) 38 39
IF (262) 41 42
ELSE (263) 42
WHILE (264) 43
FOR (265) 44
BREAK (266) 45
CONTINUE (267) 46
LOGICAL_OR (268) 53
LOGICAL_AND (269) 56
RELOP (270) 58
EQUOP (271) 59
INCOP (272) 71 73
DECOP (273) 72 74
STRUCTOP (274) 79
ID (275) 4 5 13 14 15 16 18 23 24 27 28 67 78 79
INTEGER_CONST (276) 65
STRING (277) 68
CHAR_CONST (278) 66
IFSIMPLE (279)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 8, on right: 2
type_specifier (44)
    on left: 9 10 11, on right: 4 5 7 15 16 18 23 24 27 28 29
struct_specifier (45)
    on left: 13 14, on right: 11
$@1 (46)
    on left: 12, on right: 13
func_decl (47)
    on left: 15 16 18, on right: 6 8 30
@2 (48)
    on left: 17, on right: 18
pointers (49)
    on left: 19 20, on right: 4 5 15 16 18 23 24 27 28
param_list (50)
    on left: 21 22, on right: 18 22
param_decl (51)
    on left: 23 24, on right: 21 22
def_list (52)
    on left: 25 26, on right: 13 25 33
def (53)
    on left: 27 28 29 30, on right: 25
compound_stmt (54)
    on left: 32, on right: 37
$@3 (55)
    on left: 31, on right: 32
local_defs (56)
    on left: 33, on right: 8 32
stmt_list (57)
    on left: 34 35, on right: 8 32 34
stmt (58)
    on left: 36 37 38 39 40 41 42 43 44 45 46, on right: 34 41 42 43
    44
expr_e (59)
    on left: 47 48, on right: 44
const_expr (60)
    on left: 49, on right: 5 24 28
expr (61)
    on left: 50 51, on right: 36 39 41 42 43 47 49 50 63 77 82 83
or_expr (62)
    on left: 52, on right: 51
or_list (63)
    on left: 53 54, on right: 52 53
and_expr (64)
    on left: 55, on right: 53 54
and_list (65)
    on left: 56 57, on right: 55 56
binary (66)
    on left: 58 59 60 61 62, on right: 56 57 58 59 60 61
unary (67)
    on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
    81, on right: 50 62 64 69 70 71 72 73 74 75 76 77 78 79 80 81
args (68)
    on left: 82 83, on right: 80 83


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . '{' local_defs stmt_list '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 14 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    8 ext_def: func_decl '{' . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 19
    local_defs  go to state 20


State 17

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   25 def_list: def_list . def
   33 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 33 (local_defs)

    type_specifier    go to state 25
    struct_specifier  go to state 9
    func_decl         go to state 26
    def               go to state 27


State 20

    8 ext_def: func_decl '{' local_defs . stmt_list '}'

    $default  reduce using rule 35 (stmt_list)

    stmt_list  go to state 28


State 21

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 29


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    const_expr  go to state 41
    expr        go to state 42
    or_expr     go to state 43
    or_list     go to state 44
    and_expr    go to state 45
    and_list    go to state 46
    binary      go to state 47
    unary       go to state 48


State 23

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   18          | type_specifier pointers ID '(' . @2 param_list ')'

    VOID  shift, and go to state 49
    ')'   shift, and go to state 50

    VOID      [reduce using rule 17 (@2)]
    $default  reduce using rule 17 (@2)

    @2  go to state 51


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 52

    $default  reduce using rule 20 (pointers)

    pointers  go to state 53


State 26

   30 def: func_decl . ';'

    ';'  shift, and go to state 54


State 27

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 28

    8 ext_def: func_decl '{' local_defs stmt_list . '}'
   34 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 55
    IF             shift, and go to state 56
    WHILE          shift, and go to state 57
    FOR            shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 61
    '{'            shift, and go to state 62
    '}'            shift, and go to state 63

    compound_stmt  go to state 64
    stmt           go to state 65
    expr           go to state 66
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 29

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   25 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 67

    type_specifier    go to state 25
    struct_specifier  go to state 9
    func_decl         go to state 26
    def               go to state 27


State 30

   73 unary: INCOP . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 68


State 31

   74 unary: DECOP . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 69


State 32

   67 unary: ID .

    $default  reduce using rule 67 (unary)


State 33

   65 unary: INTEGER_CONST .

    $default  reduce using rule 65 (unary)


State 34

   68 unary: STRING .

    $default  reduce using rule 68 (unary)


State 35

   66 unary: CHAR_CONST .

    $default  reduce using rule 66 (unary)


State 36

   75 unary: '&' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 70


State 37

   69 unary: '-' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 71


State 38

   76 unary: '*' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 72


State 39

   70 unary: '!' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 73


State 40

   63 unary: '(' . expr ')'
   64      | '(' . unary ')'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 74
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 75


State 41

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 76


State 42

   49 const_expr: expr .

    $default  reduce using rule 49 (const_expr)


State 43

   51 expr: or_expr .

    $default  reduce using rule 51 (expr)


State 44

   52 or_expr: or_list .
   53 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 77

    $default  reduce using rule 52 (or_expr)


State 45

   54 or_list: and_expr .

    $default  reduce using rule 54 (or_list)


State 46

   55 and_expr: and_list .
   56 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 78

    $default  reduce using rule 55 (and_expr)


State 47

   57 and_list: binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    RELOP  shift, and go to state 79
    EQUOP  shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82

    $default  reduce using rule 57 (and_list)


State 48

   50 expr: unary . '=' expr
   62 binary: unary .
   71 unary: unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '='       shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 62 (binary)


State 49

   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 90


State 50

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 51

   18 func_decl: type_specifier pointers ID '(' @2 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 91
    struct_specifier  go to state 9
    param_list        go to state 92
    param_decl        go to state 93


State 52

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 53

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 94


State 54

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 55

   38 stmt: RETURN . ';'
   39     | RETURN . expr ';'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 95

    expr      go to state 96
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 56

   41 stmt: IF . '(' expr ')' stmt
   42     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 97


State 57

   43 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 98


State 58

   44 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 99


State 59

   45 stmt: BREAK . ';'

    ';'  shift, and go to state 100


State 60

   46 stmt: CONTINUE . ';'

    ';'  shift, and go to state 101


State 61

   40 stmt: ';' .

    $default  reduce using rule 40 (stmt)


State 62

   32 compound_stmt: '{' . $@3 local_defs stmt_list '}'

    $default  reduce using rule 31 ($@3)

    $@3  go to state 102


State 63

    8 ext_def: func_decl '{' local_defs stmt_list '}' .

    $default  reduce using rule 8 (ext_def)


State 64

   37 stmt: compound_stmt .

    $default  reduce using rule 37 (stmt)


State 65

   34 stmt_list: stmt_list stmt .

    $default  reduce using rule 34 (stmt_list)


State 66

   36 stmt: expr . ';'

    ';'  shift, and go to state 103


State 67

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 68

   71 unary: unary . INCOP
   72      | unary . DECOP
   73      | INCOP unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 73 (unary)


State 69

   71 unary: unary . INCOP
   72      | unary . DECOP
   74      | DECOP unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 74 (unary)


State 70

   71 unary: unary . INCOP
   72      | unary . DECOP
   75      | '&' unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 75 (unary)


State 71

   69 unary: '-' unary .
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 69 (unary)


State 72

   71 unary: unary . INCOP
   72      | unary . DECOP
   76      | '*' unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 76 (unary)


State 73

   70 unary: '!' unary .
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 70 (unary)


State 74

   63 unary: '(' expr . ')'

    ')'  shift, and go to state 104


State 75

   50 expr: unary . '=' expr
   62 binary: unary .
   64 unary: '(' unary . ')'
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '='       shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    ')'       shift, and go to state 105
    '.'       shift, and go to state 89

    $default  reduce using rule 62 (binary)


State 76

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 106


State 77

   53 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    and_expr  go to state 107
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 108


State 78

   56 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 109
    unary   go to state 108


State 79

   58 binary: binary RELOP . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 110
    unary   go to state 108


State 80

   59 binary: binary EQUOP . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 111
    unary   go to state 108


State 81

   60 binary: binary '+' . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 112
    unary   go to state 108


State 82

   61 binary: binary '-' . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 113
    unary   go to state 108


State 83

   71 unary: unary INCOP .

    $default  reduce using rule 71 (unary)


State 84

   72 unary: unary DECOP .

    $default  reduce using rule 72 (unary)


State 85

   79 unary: unary STRUCTOP . ID

    ID  shift, and go to state 114


State 86

   50 expr: unary '=' . expr

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 115
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 87

   77 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 116
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 88

   80 unary: unary '(' . args ')'
   81      | unary '(' . ')'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ')'            shift, and go to state 117

    expr      go to state 118
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48
    args      go to state 119


State 89

   78 unary: unary '.' . ID

    ID  shift, and go to state 120


State 90

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 91

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 121


State 92

   18 func_decl: type_specifier pointers ID '(' @2 param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 122
    ')'  shift, and go to state 123


State 93

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 94

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 124
    '('  shift, and go to state 23
    ';'  shift, and go to state 125


State 95

   38 stmt: RETURN ';' .

    $default  reduce using rule 38 (stmt)


State 96

   39 stmt: RETURN expr . ';'

    ';'  shift, and go to state 126


State 97

   41 stmt: IF '(' . expr ')' stmt
   42     | IF '(' . expr ')' stmt ELSE stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 127
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 98

   43 stmt: WHILE '(' . expr ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 128
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 99

   44 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 129
    expr      go to state 130
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 100

   45 stmt: BREAK ';' .

    $default  reduce using rule 45 (stmt)


State 101

   46 stmt: CONTINUE ';' .

    $default  reduce using rule 46 (stmt)


State 102

   32 compound_stmt: '{' $@3 . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 19
    local_defs  go to state 131


State 103

   36 stmt: expr ';' .

    $default  reduce using rule 36 (stmt)


State 104

   63 unary: '(' expr ')' .

    $default  reduce using rule 63 (unary)


State 105

   64 unary: '(' unary ')' .

    $default  reduce using rule 64 (unary)


State 106

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 107

   53 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 53 (or_list)


State 108

   62 binary: unary .
   71 unary: unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    STRUCTOP  shift, and go to state 85
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 62 (binary)


State 109

   56 and_list: and_list LOGICAL_AND binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    RELOP  shift, and go to state 79
    EQUOP  shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82

    $default  reduce using rule 56 (and_list)


State 110

   58 binary: binary . RELOP binary
   58       | binary RELOP binary .
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82

    $default  reduce using rule 58 (binary)


State 111

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   59       | binary EQUOP binary .
   60       | binary . '+' binary
   61       | binary . '-' binary

    RELOP  shift, and go to state 79
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82

    $default  reduce using rule 59 (binary)


State 112

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   60       | binary '+' binary .
   61       | binary . '-' binary

    $default  reduce using rule 60 (binary)


State 113

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary
   61       | binary '-' binary .

    $default  reduce using rule 61 (binary)


State 114

   79 unary: unary STRUCTOP ID .

    $default  reduce using rule 79 (unary)


State 115

   50 expr: unary '=' expr .

    $default  reduce using rule 50 (expr)


State 116

   77 unary: unary '[' expr . ']'

    ']'  shift, and go to state 132


State 117

   81 unary: unary '(' ')' .

    $default  reduce using rule 81 (unary)


State 118

   82 args: expr .

    $default  reduce using rule 82 (args)


State 119

   80 unary: unary '(' args . ')'
   83 args: args . ',' expr

    ','  shift, and go to state 133
    ')'  shift, and go to state 134


State 120

   78 unary: unary '.' ID .

    $default  reduce using rule 78 (unary)


State 121

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 135


State 122

   22 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 91
    struct_specifier  go to state 9
    param_decl        go to state 136


State 123

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')' .

    $default  reduce using rule 18 (func_decl)


State 124

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    const_expr  go to state 137
    expr        go to state 42
    or_expr     go to state 43
    or_list     go to state 44
    and_expr    go to state 45
    and_list    go to state 46
    binary      go to state 47
    unary       go to state 48


State 125

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 126

   39 stmt: RETURN expr ';' .

    $default  reduce using rule 39 (stmt)


State 127

   41 stmt: IF '(' expr . ')' stmt
   42     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 138


State 128

   43 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 139


State 129

   44 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 140


State 130

   47 expr_e: expr .

    $default  reduce using rule 47 (expr_e)


State 131

   32 compound_stmt: '{' $@3 local_defs . stmt_list '}'

    $default  reduce using rule 35 (stmt_list)

    stmt_list  go to state 141


State 132

   77 unary: unary '[' expr ']' .

    $default  reduce using rule 77 (unary)


State 133

   83 args: args ',' . expr

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 142
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 134

   80 unary: unary '(' args ')' .

    $default  reduce using rule 80 (unary)


State 135

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 143

    $default  reduce using rule 23 (param_decl)


State 136

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 137

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 144


State 138

   41 stmt: IF '(' expr ')' . stmt
   42     | IF '(' expr ')' . stmt ELSE stmt

    RETURN         shift, and go to state 55
    IF             shift, and go to state 56
    WHILE          shift, and go to state 57
    FOR            shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 61
    '{'            shift, and go to state 62

    compound_stmt  go to state 64
    stmt           go to state 145
    expr           go to state 66
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 139

   43 stmt: WHILE '(' expr ')' . stmt

    RETURN         shift, and go to state 55
    IF             shift, and go to state 56
    WHILE          shift, and go to state 57
    FOR            shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 61
    '{'            shift, and go to state 62

    compound_stmt  go to state 64
    stmt           go to state 146
    expr           go to state 66
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 140

   44 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 147
    expr      go to state 130
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 141

   32 compound_stmt: '{' $@3 local_defs stmt_list . '}'
   34 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 55
    IF             shift, and go to state 56
    WHILE          shift, and go to state 57
    FOR            shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 61
    '{'            shift, and go to state 62
    '}'            shift, and go to state 148

    compound_stmt  go to state 64
    stmt           go to state 65
    expr           go to state 66
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 142

   83 args: args ',' expr .

    $default  reduce using rule 83 (args)


State 143

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    const_expr  go to state 149
    expr        go to state 42
    or_expr     go to state 43
    or_list     go to state 44
    and_expr    go to state 45
    and_list    go to state 46
    binary      go to state 47
    unary       go to state 48


State 144

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 150


State 145

   41 stmt: IF '(' expr ')' stmt .
   42     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 151

    $default  reduce using rule 41 (stmt)


State 146

   43 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 43 (stmt)


State 147

   44 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 152


State 148

   32 compound_stmt: '{' $@3 local_defs stmt_list '}' .

    $default  reduce using rule 32 (compound_stmt)


State 149

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 153


State 150

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 151

   42 stmt: IF '(' expr ')' stmt ELSE . stmt

    RETURN         shift, and go to state 55
    IF             shift, and go to state 56
    WHILE          shift, and go to state 57
    FOR            shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 61
    '{'            shift, and go to state 62

    compound_stmt  go to state 64
    stmt           go to state 154
    expr           go to state 66
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 152

   44 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 155
    expr      go to state 130
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 153

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 154

   42 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 42 (stmt)


State 155

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 156


State 156

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 55
    IF             shift, and go to state 56
    WHILE          shift, and go to state 57
    FOR            shift, and go to state 58
    BREAK          shift, and go to state 59
    CONTINUE       shift, and go to state 60
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 61
    '{'            shift, and go to state 62

    compound_stmt  go to state 64
    stmt           go to state 157
    expr           go to state 66
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 157

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 44 (stmt)
