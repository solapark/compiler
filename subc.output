Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl '{' local_defs stmt_list '}'

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'
   17          | type_specifier pointers ID '(' param_list ')'

   18 pointers: '*'
   19         | %empty

   20 param_list: param_decl
   21           | param_list ',' param_decl

   22 param_decl: type_specifier pointers ID
   23           | type_specifier pointers ID '[' const_expr ']'

   24 def_list: def_list def
   25         | %empty

   26 def: type_specifier pointers ID ';'
   27    | type_specifier pointers ID '[' const_expr ']' ';'
   28    | type_specifier ';'
   29    | func_decl ';'

   30 $@2: %empty

   31 compound_stmt: '{' $@2 local_defs stmt_list '}'

   32 local_defs: def_list

   33 stmt_list: stmt_list stmt
   34          | %empty

   35 stmt: expr ';'
   36     | compound_stmt
   37     | RETURN ';'
   38     | RETURN expr ';'
   39     | ';'
   40     | IF '(' expr ')' stmt
   41     | IF '(' expr ')' stmt ELSE stmt
   42     | WHILE '(' expr ')' stmt
   43     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   44     | BREAK ';'
   45     | CONTINUE ';'

   46 expr_e: expr
   47       | %empty

   48 const_expr: expr

   49 expr: unary '=' expr
   50     | or_expr

   51 or_expr: or_list

   52 or_list: or_list LOGICAL_OR and_expr
   53        | and_expr

   54 and_expr: and_list

   55 and_list: and_list LOGICAL_AND binary
   56         | binary

   57 binary: binary RELOP binary
   58       | binary EQUOP binary
   59       | binary '+' binary
   60       | binary '-' binary
   61       | unary

   62 unary: '(' expr ')'
   63      | '(' unary ')'
   64      | INTEGER_CONST
   65      | CHAR_CONST
   66      | ID
   67      | STRING
   68      | '-' unary
   69      | '!' unary
   70      | unary INCOP
   71      | unary DECOP
   72      | INCOP unary
   73      | DECOP unary
   74      | '&' unary
   75      | '*' unary
   76      | unary '[' expr ']'
   77      | unary '.' ID
   78      | unary STRUCTOP ID
   79      | unary '(' args ')'
   80      | unary '(' ')'

   81 args: expr
   82     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69
'&' (38) 74
'(' (40) 15 16 17 40 41 42 43 62 63 79 80
')' (41) 15 16 17 40 41 42 43 62 63 79 80
'*' (42) 18 75
'+' (43) 59
',' (44) 21 82
'-' (45) 60 68
'.' (46) 77
';' (59) 4 5 6 7 26 27 28 29 35 37 38 39 43 44 45
'=' (61) 49
'[' (91) 5 23 27 76
']' (93) 5 23 27 76
'{' (123) 8 13 31
'}' (125) 8 13 31
error (256)
TYPE (258) 9
VOID (259) 10 16
STRUCT (260) 13 14
RETURN (261) 37 38
IF (262) 40 41
ELSE (263) 41
WHILE (264) 42
FOR (265) 43
BREAK (266) 44
CONTINUE (267) 45
LOGICAL_OR (268) 52
LOGICAL_AND (269) 55
RELOP (270) 57
EQUOP (271) 58
INCOP (272) 70 72
DECOP (273) 71 73
STRUCTOP (274) 78
ID (275) 4 5 13 14 15 16 17 22 23 26 27 66 77 78
INTEGER_CONST (276) 64
STRING (277) 67
CHAR_CONST (278) 65
IFSIMPLE (279)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 8, on right: 2
type_specifier (44)
    on left: 9 10 11, on right: 4 5 7 15 16 17 22 23 26 27 28
struct_specifier (45)
    on left: 13 14, on right: 11
$@1 (46)
    on left: 12, on right: 13
func_decl (47)
    on left: 15 16 17, on right: 6 8 29
pointers (48)
    on left: 18 19, on right: 4 5 15 16 17 22 23 26 27
param_list (49)
    on left: 20 21, on right: 17 21
param_decl (50)
    on left: 22 23, on right: 20 21
def_list (51)
    on left: 24 25, on right: 13 24 32
def (52)
    on left: 26 27 28 29, on right: 24
compound_stmt (53)
    on left: 31, on right: 36
$@2 (54)
    on left: 30, on right: 31
local_defs (55)
    on left: 32, on right: 8 31
stmt_list (56)
    on left: 33 34, on right: 8 31 33
stmt (57)
    on left: 35 36 37 38 39 40 41 42 43 44 45, on right: 33 40 41 42
    43
expr_e (58)
    on left: 46 47, on right: 43
const_expr (59)
    on left: 48, on right: 5 23 27
expr (60)
    on left: 49 50, on right: 35 38 40 41 42 46 48 49 62 76 81 82
or_expr (61)
    on left: 51, on right: 50
or_list (62)
    on left: 52 53, on right: 51 52
and_expr (63)
    on left: 54, on right: 52 53
and_list (64)
    on left: 55 56, on right: 54 55
binary (65)
    on left: 57 58 59 60 61, on right: 55 56 57 58 59 60
unary (66)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80, on right: 49 61 63 68 69 70 71 72 73 74 75 76 77 78 79 80
args (67)
    on left: 81 82, on right: 79 82


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   17          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 19 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . '{' local_defs stmt_list '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 14 (struct_specifier)


State 12

   18 pointers: '*' .

    $default  reduce using rule 18 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   17          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    8 ext_def: func_decl '{' . local_defs stmt_list '}'

    $default  reduce using rule 25 (def_list)

    def_list    go to state 19
    local_defs  go to state 20


State 17

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   17          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   24 def_list: def_list . def
   32 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 32 (local_defs)

    type_specifier    go to state 25
    struct_specifier  go to state 9
    func_decl         go to state 26
    def               go to state 27


State 20

    8 ext_def: func_decl '{' local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 28


State 21

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 25 (def_list)

    def_list  go to state 29


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    const_expr  go to state 41
    expr        go to state 42
    or_expr     go to state 43
    or_list     go to state 44
    and_expr    go to state 45
    and_list    go to state 46
    binary      go to state 47
    unary       go to state 48


State 23

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   17          | type_specifier pointers ID '(' . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 49
    STRUCT  shift, and go to state 6
    ')'     shift, and go to state 50

    type_specifier    go to state 51
    struct_specifier  go to state 9
    param_list        go to state 52
    param_decl        go to state 53


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   17          | type_specifier . pointers ID '(' param_list ')'
   26 def: type_specifier . pointers ID ';'
   27    | type_specifier . pointers ID '[' const_expr ']' ';'
   28    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 54

    $default  reduce using rule 19 (pointers)

    pointers  go to state 55


State 26

   29 def: func_decl . ';'

    ';'  shift, and go to state 56


State 27

   24 def_list: def_list def .

    $default  reduce using rule 24 (def_list)


State 28

    8 ext_def: func_decl '{' local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 63
    '{'            shift, and go to state 64
    '}'            shift, and go to state 65

    compound_stmt  go to state 66
    stmt           go to state 67
    expr           go to state 68
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 29

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   24 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 69

    type_specifier    go to state 25
    struct_specifier  go to state 9
    func_decl         go to state 26
    def               go to state 27


State 30

   72 unary: INCOP . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 70


State 31

   73 unary: DECOP . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 71


State 32

   66 unary: ID .

    $default  reduce using rule 66 (unary)


State 33

   64 unary: INTEGER_CONST .

    $default  reduce using rule 64 (unary)


State 34

   67 unary: STRING .

    $default  reduce using rule 67 (unary)


State 35

   65 unary: CHAR_CONST .

    $default  reduce using rule 65 (unary)


State 36

   74 unary: '&' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 72


State 37

   68 unary: '-' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 73


State 38

   75 unary: '*' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 74


State 39

   69 unary: '!' . unary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    unary  go to state 75


State 40

   62 unary: '(' . expr ')'
   63      | '(' . unary ')'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 76
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 77


State 41

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 78


State 42

   48 const_expr: expr .

    $default  reduce using rule 48 (const_expr)


State 43

   50 expr: or_expr .

    $default  reduce using rule 50 (expr)


State 44

   51 or_expr: or_list .
   52 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 79

    $default  reduce using rule 51 (or_expr)


State 45

   53 or_list: and_expr .

    $default  reduce using rule 53 (or_list)


State 46

   54 and_expr: and_list .
   55 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 80

    $default  reduce using rule 54 (and_expr)


State 47

   56 and_list: binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 81
    EQUOP  shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84

    $default  reduce using rule 56 (and_list)


State 48

   49 expr: unary . '=' expr
   61 binary: unary .
   70 unary: unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '='       shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 61 (binary)


State 49

   10 type_specifier: VOID .
   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 92

    $default  reduce using rule 10 (type_specifier)


State 50

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 51

   22 param_decl: type_specifier . pointers ID
   23           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 19 (pointers)

    pointers  go to state 93


State 52

   17 func_decl: type_specifier pointers ID '(' param_list . ')'
   21 param_list: param_list . ',' param_decl

    ','  shift, and go to state 94
    ')'  shift, and go to state 95


State 53

   20 param_list: param_decl .

    $default  reduce using rule 20 (param_list)


State 54

   28 def: type_specifier ';' .

    $default  reduce using rule 28 (def)


State 55

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   17          | type_specifier pointers . ID '(' param_list ')'
   26 def: type_specifier pointers . ID ';'
   27    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 96


State 56

   29 def: func_decl ';' .

    $default  reduce using rule 29 (def)


State 57

   37 stmt: RETURN . ';'
   38     | RETURN . expr ';'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 97

    expr      go to state 98
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 58

   40 stmt: IF . '(' expr ')' stmt
   41     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 99


State 59

   42 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 100


State 60

   43 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 101


State 61

   44 stmt: BREAK . ';'

    ';'  shift, and go to state 102


State 62

   45 stmt: CONTINUE . ';'

    ';'  shift, and go to state 103


State 63

   39 stmt: ';' .

    $default  reduce using rule 39 (stmt)


State 64

   31 compound_stmt: '{' . $@2 local_defs stmt_list '}'

    $default  reduce using rule 30 ($@2)

    $@2  go to state 104


State 65

    8 ext_def: func_decl '{' local_defs stmt_list '}' .

    $default  reduce using rule 8 (ext_def)


State 66

   36 stmt: compound_stmt .

    $default  reduce using rule 36 (stmt)


State 67

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 68

   35 stmt: expr . ';'

    ';'  shift, and go to state 105


State 69

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 70

   70 unary: unary . INCOP
   71      | unary . DECOP
   72      | INCOP unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 72 (unary)


State 71

   70 unary: unary . INCOP
   71      | unary . DECOP
   73      | DECOP unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 73 (unary)


State 72

   70 unary: unary . INCOP
   71      | unary . DECOP
   74      | '&' unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 74 (unary)


State 73

   68 unary: '-' unary .
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 68 (unary)


State 74

   70 unary: unary . INCOP
   71      | unary . DECOP
   75      | '*' unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 75 (unary)


State 75

   69 unary: '!' unary .
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 69 (unary)


State 76

   62 unary: '(' expr . ')'

    ')'  shift, and go to state 106


State 77

   49 expr: unary . '=' expr
   61 binary: unary .
   63 unary: '(' unary . ')'
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '='       shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    ')'       shift, and go to state 107
    '.'       shift, and go to state 91

    $default  reduce using rule 61 (binary)


State 78

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 108


State 79

   52 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    and_expr  go to state 109
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 110


State 80

   55 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 111
    unary   go to state 110


State 81

   57 binary: binary RELOP . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 112
    unary   go to state 110


State 82

   58 binary: binary EQUOP . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 113
    unary   go to state 110


State 83

   59 binary: binary '+' . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 114
    unary   go to state 110


State 84

   60 binary: binary '-' . binary

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    binary  go to state 115
    unary   go to state 110


State 85

   70 unary: unary INCOP .

    $default  reduce using rule 70 (unary)


State 86

   71 unary: unary DECOP .

    $default  reduce using rule 71 (unary)


State 87

   78 unary: unary STRUCTOP . ID

    ID  shift, and go to state 116


State 88

   49 expr: unary '=' . expr

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 117
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 89

   76 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 118
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 90

   79 unary: unary '(' . args ')'
   80      | unary '(' . ')'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ')'            shift, and go to state 119

    expr      go to state 120
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48
    args      go to state 121


State 91

   77 unary: unary '.' . ID

    ID  shift, and go to state 122


State 92

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 93

   22 param_decl: type_specifier pointers . ID
   23           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 123


State 94

   21 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 51
    struct_specifier  go to state 9
    param_decl        go to state 124


State 95

   17 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 17 (func_decl)


State 96

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   17          | type_specifier pointers ID . '(' param_list ')'
   26 def: type_specifier pointers ID . ';'
   27    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 125
    '('  shift, and go to state 23
    ';'  shift, and go to state 126


State 97

   37 stmt: RETURN ';' .

    $default  reduce using rule 37 (stmt)


State 98

   38 stmt: RETURN expr . ';'

    ';'  shift, and go to state 127


State 99

   40 stmt: IF '(' . expr ')' stmt
   41     | IF '(' . expr ')' stmt ELSE stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 128
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 100

   42 stmt: WHILE '(' . expr ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 129
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 101

   43 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 130
    expr      go to state 131
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 102

   44 stmt: BREAK ';' .

    $default  reduce using rule 44 (stmt)


State 103

   45 stmt: CONTINUE ';' .

    $default  reduce using rule 45 (stmt)


State 104

   31 compound_stmt: '{' $@2 . local_defs stmt_list '}'

    $default  reduce using rule 25 (def_list)

    def_list    go to state 19
    local_defs  go to state 132


State 105

   35 stmt: expr ';' .

    $default  reduce using rule 35 (stmt)


State 106

   62 unary: '(' expr ')' .

    $default  reduce using rule 62 (unary)


State 107

   63 unary: '(' unary ')' .

    $default  reduce using rule 63 (unary)


State 108

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 109

   52 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 52 (or_list)


State 110

   61 binary: unary .
   70 unary: unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91

    $default  reduce using rule 61 (binary)


State 111

   55 and_list: and_list LOGICAL_AND binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 81
    EQUOP  shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84

    $default  reduce using rule 55 (and_list)


State 112

   57 binary: binary . RELOP binary
   57       | binary RELOP binary .
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 57 (binary)


State 113

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   58       | binary EQUOP binary .
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 81
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84

    $default  reduce using rule 58 (binary)


State 114

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   59       | binary '+' binary .
   60       | binary . '-' binary

    $default  reduce using rule 59 (binary)


State 115

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary
   60       | binary '-' binary .

    $default  reduce using rule 60 (binary)


State 116

   78 unary: unary STRUCTOP ID .

    $default  reduce using rule 78 (unary)


State 117

   49 expr: unary '=' expr .

    $default  reduce using rule 49 (expr)


State 118

   76 unary: unary '[' expr . ']'

    ']'  shift, and go to state 133


State 119

   80 unary: unary '(' ')' .

    $default  reduce using rule 80 (unary)


State 120

   81 args: expr .

    $default  reduce using rule 81 (args)


State 121

   79 unary: unary '(' args . ')'
   82 args: args . ',' expr

    ','  shift, and go to state 134
    ')'  shift, and go to state 135


State 122

   77 unary: unary '.' ID .

    $default  reduce using rule 77 (unary)


State 123

   22 param_decl: type_specifier pointers ID .
   23           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 136

    $default  reduce using rule 22 (param_decl)


State 124

   21 param_list: param_list ',' param_decl .

    $default  reduce using rule 21 (param_list)


State 125

   27 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    const_expr  go to state 137
    expr        go to state 42
    or_expr     go to state 43
    or_list     go to state 44
    and_expr    go to state 45
    and_list    go to state 46
    binary      go to state 47
    unary       go to state 48


State 126

   26 def: type_specifier pointers ID ';' .

    $default  reduce using rule 26 (def)


State 127

   38 stmt: RETURN expr ';' .

    $default  reduce using rule 38 (stmt)


State 128

   40 stmt: IF '(' expr . ')' stmt
   41     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 138


State 129

   42 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 139


State 130

   43 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 140


State 131

   46 expr_e: expr .

    $default  reduce using rule 46 (expr_e)


State 132

   31 compound_stmt: '{' $@2 local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 141


State 133

   76 unary: unary '[' expr ']' .

    $default  reduce using rule 76 (unary)


State 134

   82 args: args ',' . expr

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    expr      go to state 142
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 135

   79 unary: unary '(' args ')' .

    $default  reduce using rule 79 (unary)


State 136

   23 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    const_expr  go to state 143
    expr        go to state 42
    or_expr     go to state 43
    or_list     go to state 44
    and_expr    go to state 45
    and_list    go to state 46
    binary      go to state 47
    unary       go to state 48


State 137

   27 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 144


State 138

   40 stmt: IF '(' expr ')' . stmt
   41     | IF '(' expr ')' . stmt ELSE stmt

    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 63
    '{'            shift, and go to state 64

    compound_stmt  go to state 66
    stmt           go to state 145
    expr           go to state 68
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 139

   42 stmt: WHILE '(' expr ')' . stmt

    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 63
    '{'            shift, and go to state 64

    compound_stmt  go to state 66
    stmt           go to state 146
    expr           go to state 68
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 140

   43 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 147
    expr      go to state 131
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 141

   31 compound_stmt: '{' $@2 local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 63
    '{'            shift, and go to state 64
    '}'            shift, and go to state 148

    compound_stmt  go to state 66
    stmt           go to state 67
    expr           go to state 68
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 142

   82 args: args ',' expr .

    $default  reduce using rule 82 (args)


State 143

   23 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 149


State 144

   27 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 150


State 145

   40 stmt: IF '(' expr ')' stmt .
   41     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 151

    $default  reduce using rule 40 (stmt)


State 146

   42 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 42 (stmt)


State 147

   43 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 152


State 148

   31 compound_stmt: '{' $@2 local_defs stmt_list '}' .

    $default  reduce using rule 31 (compound_stmt)


State 149

   23 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 23 (param_decl)


State 150

   27 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 27 (def)


State 151

   41 stmt: IF '(' expr ')' stmt ELSE . stmt

    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 63
    '{'            shift, and go to state 64

    compound_stmt  go to state 66
    stmt           go to state 153
    expr           go to state 68
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 152

   43 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 154
    expr      go to state 131
    or_expr   go to state 43
    or_list   go to state 44
    and_expr  go to state 45
    and_list  go to state 46
    binary    go to state 47
    unary     go to state 48


State 153

   41 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 41 (stmt)


State 154

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 155


State 155

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    INCOP          shift, and go to state 30
    DECOP          shift, and go to state 31
    ID             shift, and go to state 32
    INTEGER_CONST  shift, and go to state 33
    STRING         shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    '&'            shift, and go to state 36
    '-'            shift, and go to state 37
    '*'            shift, and go to state 38
    '!'            shift, and go to state 39
    '('            shift, and go to state 40
    ';'            shift, and go to state 63
    '{'            shift, and go to state 64

    compound_stmt  go to state 66
    stmt           go to state 156
    expr           go to state 68
    or_expr        go to state 43
    or_list        go to state 44
    and_expr       go to state 45
    and_list       go to state 46
    binary         go to state 47
    unary          go to state 48


State 156

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 43 (stmt)
