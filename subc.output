Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 $@2: %empty

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list '}'

   11 type_specifier: TYPE
   12               | VOID
   13               | struct_specifier

   14 $@3: %empty

   15 struct_specifier: STRUCT ID '{' $@3 def_list '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'
   19          | type_specifier pointers ID '(' param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 $@4: %empty

   33 compound_stmt: '{' $@4 local_defs stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'
   38     | compound_stmt
   39     | RETURN ';'

   40 $@5: %empty

   41 stmt: RETURN $@5 expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'
   49     | 'w' '(' STRING ')'
   50     | 'w' '(' expr ')'

   51 expr_e: expr
   52       | %empty

   53 const_expr: INTEGER_CONST

   54 $@6: %empty

   55 expr: unary '=' $@6 expr
   56     | or_expr

   57 or_expr: or_list

   58 or_list: or_list LOGICAL_OR and_expr
   59        | and_expr

   60 and_expr: and_list

   61 and_list: and_list LOGICAL_AND binary
   62         | binary

   63 binary: binary RELOP binary
   64       | binary EQUOP binary
   65       | binary '*' binary
   66       | binary '/' binary
   67       | binary '%' binary
   68       | binary '+' binary
   69       | binary '-' binary
   70       | unary

   71 unary: '(' expr ')'
   72      | '(' unary ')'
   73      | INTEGER_CONST
   74      | CHAR_CONST
   75      | ID
   76      | STRING
   77      | '-' unary
   78      | '!' unary
   79      | unary INCOP
   80      | unary DECOP
   81      | INCOP unary
   82      | DECOP unary
   83      | '&' unary
   84      | '*' unary
   85      | unary '[' expr ']'
   86      | unary '.' ID
   87      | unary STRUCTOP ID
   88      | unary '(' args ')'
   89      | unary '(' ')'

   90 args: expr
   91     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 78
'%' (37) 67
'&' (38) 83
'(' (40) 17 18 19 43 44 45 46 49 50 71 72 88 89
')' (41) 17 18 19 43 44 45 46 49 50 71 72 88 89
'*' (42) 20 65 84
'+' (43) 68
',' (44) 23 91
'-' (45) 69 77
'.' (46) 86
'/' (47) 66
';' (59) 4 5 6 7 28 29 30 31 37 39 41 42 46 47 48
'=' (61) 55
'[' (91) 5 25 29 85
']' (93) 5 25 29 85
'w' (119) 49 50
'{' (123) 10 15 33
'}' (125) 10 15 33
error (256)
TYPE (258) 11
VOID (259) 12 18
STRUCT (260) 15 16
RETURN (261) 39 41
IF (262) 43 44
ELSE (263) 44
WHILE (264) 45
FOR (265) 46
BREAK (266) 47
CONTINUE (267) 48
LOGICAL_OR (268) 58
LOGICAL_AND (269) 61
RELOP (270) 63
EQUOP (271) 64
INCOP (272) 79 81
DECOP (273) 80 82
STRUCTOP (274) 87
ID (275) 4 5 15 16 17 18 19 24 25 28 29 75 86 87
INTEGER_CONST (276) 53 73
STRING (277) 49 76
CHAR_CONST (278) 74
IFSIMPLE (279)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
ext_def_list (45)
    on left: 2 3, on right: 1 2
ext_def (46)
    on left: 4 5 6 7 10, on right: 2
$@1 (47)
    on left: 8, on right: 10
$@2 (48)
    on left: 9, on right: 10
type_specifier (49)
    on left: 11 12 13, on right: 4 5 7 17 18 19 24 25 28 29 30
struct_specifier (50)
    on left: 15 16, on right: 13
$@3 (51)
    on left: 14, on right: 15
func_decl (52)
    on left: 17 18 19, on right: 6 10 31
pointers (53)
    on left: 20 21, on right: 4 5 17 18 19 24 25 28 29
param_list (54)
    on left: 22 23, on right: 19 23
param_decl (55)
    on left: 24 25, on right: 22 23
def_list (56)
    on left: 26 27, on right: 15 26 34
def (57)
    on left: 28 29 30 31, on right: 26
compound_stmt (58)
    on left: 33, on right: 38
$@4 (59)
    on left: 32, on right: 33
local_defs (60)
    on left: 34, on right: 10 33
stmt_list (61)
    on left: 35 36, on right: 10 33 35
stmt (62)
    on left: 37 38 39 41 42 43 44 45 46 47 48 49 50, on right: 35 43
    44 45 46
$@5 (63)
    on left: 40, on right: 41
expr_e (64)
    on left: 51 52, on right: 46
const_expr (65)
    on left: 53, on right: 5 25 29
expr (66)
    on left: 55 56, on right: 37 41 43 44 45 50 51 55 71 85 90 91
$@6 (67)
    on left: 54, on right: 55
or_expr (68)
    on left: 57, on right: 56
or_list (69)
    on left: 58 59, on right: 57 58
and_expr (70)
    on left: 60, on right: 58 59
and_list (71)
    on left: 61 62, on right: 60 61
binary (72)
    on left: 63 64 65 66 67 68 69 70, on right: 61 62 63 64 65 66 67
    68 69
unary (73)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
    89, on right: 55 70 72 77 78 79 80 81 82 83 84 85 86 87 88 89
args (74)
    on left: 90 91, on right: 88 91


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 type_specifier: TYPE .

    $default  reduce using rule 11 (type_specifier)


State 5

   12 type_specifier: VOID .

    $default  reduce using rule 12 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@3 def_list '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   13 type_specifier: struct_specifier .

    $default  reduce using rule 13 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
   10        | func_decl . '{' $@1 local_defs $@2 stmt_list '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' $@3 def_list '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   10 ext_def: func_decl '{' . $@1 local_defs $@2 stmt_list '}'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 19


State 17

   15 struct_specifier: STRUCT ID '{' . $@3 def_list '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 20


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 21
    '('  shift, and go to state 22
    ';'  shift, and go to state 23


State 19

   10 ext_def: func_decl '{' $@1 . local_defs $@2 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 24
    local_defs  go to state 25


State 20

   15 struct_specifier: STRUCT ID '{' $@3 . def_list '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 21

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 27

    const_expr  go to state 28


State 22

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 29
    STRUCT  shift, and go to state 6
    ')'     shift, and go to state 30

    type_specifier    go to state 31
    struct_specifier  go to state 9
    param_list        go to state 32
    param_decl        go to state 33


State 23

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 24

   26 def_list: def_list . def
   34 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 34
    struct_specifier  go to state 9
    func_decl         go to state 35
    def               go to state 36


State 25

   10 ext_def: func_decl '{' $@1 local_defs . $@2 stmt_list '}'

    $default  reduce using rule 9 ($@2)

    $@2  go to state 37


State 26

   15 struct_specifier: STRUCT ID '{' $@3 def_list . '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 38

    type_specifier    go to state 34
    struct_specifier  go to state 9
    func_decl         go to state 35
    def               go to state 36


State 27

   53 const_expr: INTEGER_CONST .

    $default  reduce using rule 53 (const_expr)


State 28

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 39


State 29

   12 type_specifier: VOID .
   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 40

    $default  reduce using rule 12 (type_specifier)


State 30

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 31

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 41


State 32

   19 func_decl: type_specifier pointers ID '(' param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 42
    ')'  shift, and go to state 43


State 33

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 34

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 44

    $default  reduce using rule 21 (pointers)

    pointers  go to state 45


State 35

   31 def: func_decl . ';'

    ';'  shift, and go to state 46


State 36

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 37

   10 ext_def: func_decl '{' $@1 local_defs $@2 . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 47


State 38

   15 struct_specifier: STRUCT ID '{' $@3 def_list '}' .

    $default  reduce using rule 15 (struct_specifier)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 48


State 40

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 41

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 49


State 42

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 31
    struct_specifier  go to state 9
    param_decl        go to state 50


State 43

   19 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 44

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 45

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 51


State 46

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 47

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    '}'            shift, and go to state 71
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 74
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 48

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 49

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 82

    $default  reduce using rule 24 (param_decl)


State 50

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 51

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 83
    '('  shift, and go to state 22
    ';'  shift, and go to state 84


State 52

   39 stmt: RETURN . ';'
   41     | RETURN . $@5 expr ';'

    ';'  shift, and go to state 85

    $default  reduce using rule 40 ($@5)

    $@5  go to state 86


State 53

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 87


State 54

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 88


State 55

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 89


State 56

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 90


State 57

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 91


State 58

   81 unary: INCOP . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 92


State 59

   82 unary: DECOP . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 93


State 60

   75 unary: ID .

    $default  reduce using rule 75 (unary)


State 61

   73 unary: INTEGER_CONST .

    $default  reduce using rule 73 (unary)


State 62

   76 unary: STRING .

    $default  reduce using rule 76 (unary)


State 63

   74 unary: CHAR_CONST .

    $default  reduce using rule 74 (unary)


State 64

   83 unary: '&' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 94


State 65

   77 unary: '-' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 95


State 66

   84 unary: '*' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 96


State 67

   78 unary: '!' . unary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    unary  go to state 97


State 68

   71 unary: '(' . expr ')'
   72      | '(' . unary ')'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 98
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 99


State 69

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 70

   33 compound_stmt: '{' . $@4 local_defs stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 100


State 71

   10 ext_def: func_decl '{' $@1 local_defs $@2 stmt_list '}' .

    $default  reduce using rule 10 (ext_def)


State 72

   49 stmt: 'w' . '(' STRING ')'
   50     | 'w' . '(' expr ')'

    '('  shift, and go to state 101


State 73

   38 stmt: compound_stmt .

    $default  reduce using rule 38 (stmt)


State 74

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 75

   37 stmt: expr . ';'

    ';'  shift, and go to state 102


State 76

   56 expr: or_expr .

    $default  reduce using rule 56 (expr)


State 77

   57 or_expr: or_list .
   58 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 103

    $default  reduce using rule 57 (or_expr)


State 78

   59 or_list: and_expr .

    $default  reduce using rule 59 (or_list)


State 79

   60 and_expr: and_list .
   61 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 104

    $default  reduce using rule 60 (and_expr)


State 80

   62 and_list: binary .
   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary

    RELOP  shift, and go to state 105
    EQUOP  shift, and go to state 106
    '+'    shift, and go to state 107
    '-'    shift, and go to state 108
    '*'    shift, and go to state 109
    '/'    shift, and go to state 110
    '%'    shift, and go to state 111

    $default  reduce using rule 62 (and_list)


State 81

   55 expr: unary . '=' $@6 expr
   70 binary: unary .
   79 unary: unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '='       shift, and go to state 115
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 70 (binary)


State 82

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INTEGER_CONST  shift, and go to state 27

    const_expr  go to state 119


State 83

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 27

    const_expr  go to state 120


State 84

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 85

   39 stmt: RETURN ';' .

    $default  reduce using rule 39 (stmt)


State 86

   41 stmt: RETURN $@5 . expr ';'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 121
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 87

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 122
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 88

   45 stmt: WHILE '(' . expr ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 123
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 89

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 124
    expr      go to state 125
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 90

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 91

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 92

   79 unary: unary . INCOP
   80      | unary . DECOP
   81      | INCOP unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 81 (unary)


State 93

   79 unary: unary . INCOP
   80      | unary . DECOP
   82      | DECOP unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 82 (unary)


State 94

   79 unary: unary . INCOP
   80      | unary . DECOP
   83      | '&' unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 83 (unary)


State 95

   77 unary: '-' unary .
   79      | unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 77 (unary)


State 96

   79 unary: unary . INCOP
   80      | unary . DECOP
   84      | '*' unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 84 (unary)


State 97

   78 unary: '!' unary .
   79      | unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 78 (unary)


State 98

   71 unary: '(' expr . ')'

    ')'  shift, and go to state 126


State 99

   55 expr: unary . '=' $@6 expr
   70 binary: unary .
   72 unary: '(' unary . ')'
   79      | unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '='       shift, and go to state 115
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    ')'       shift, and go to state 127
    '.'       shift, and go to state 118

    $default  reduce using rule 70 (binary)


State 100

   33 compound_stmt: '{' $@4 . local_defs stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 24
    local_defs  go to state 128


State 101

   49 stmt: 'w' '(' . STRING ')'
   50     | 'w' '(' . expr ')'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 129
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 130
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 102

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 103

   58 or_list: or_list LOGICAL_OR . and_expr

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    and_expr  go to state 131
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 132


State 104

   61 and_list: and_list LOGICAL_AND . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 133
    unary   go to state 132


State 105

   63 binary: binary RELOP . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 134
    unary   go to state 132


State 106

   64 binary: binary EQUOP . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 135
    unary   go to state 132


State 107

   68 binary: binary '+' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 136
    unary   go to state 132


State 108

   69 binary: binary '-' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 137
    unary   go to state 132


State 109

   65 binary: binary '*' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 138
    unary   go to state 132


State 110

   66 binary: binary '/' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 139
    unary   go to state 132


State 111

   67 binary: binary '%' . binary

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    binary  go to state 140
    unary   go to state 132


State 112

   79 unary: unary INCOP .

    $default  reduce using rule 79 (unary)


State 113

   80 unary: unary DECOP .

    $default  reduce using rule 80 (unary)


State 114

   87 unary: unary STRUCTOP . ID

    ID  shift, and go to state 141


State 115

   55 expr: unary '=' . $@6 expr

    $default  reduce using rule 54 ($@6)

    $@6  go to state 142


State 116

   85 unary: unary '[' . expr ']'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 143
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 117

   88 unary: unary '(' . args ')'
   89      | unary '(' . ')'

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ')'            shift, and go to state 144

    expr      go to state 145
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81
    args      go to state 146


State 118

   86 unary: unary '.' . ID

    ID  shift, and go to state 147


State 119

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 148


State 120

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 149


State 121

   41 stmt: RETURN $@5 expr . ';'

    ';'  shift, and go to state 150


State 122

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 151


State 123

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 152


State 124

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 153


State 125

   51 expr_e: expr .

    $default  reduce using rule 51 (expr_e)


State 126

   71 unary: '(' expr ')' .

    $default  reduce using rule 71 (unary)


State 127

   72 unary: '(' unary ')' .

    $default  reduce using rule 72 (unary)


State 128

   33 compound_stmt: '{' $@4 local_defs . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 154


State 129

   49 stmt: 'w' '(' STRING . ')'
   76 unary: STRING .

    ')'  shift, and go to state 155

    $default  reduce using rule 76 (unary)


State 130

   50 stmt: 'w' '(' expr . ')'

    ')'  shift, and go to state 156


State 131

   58 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 58 (or_list)


State 132

   70 binary: unary .
   79 unary: unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   88      | unary . '(' args ')'
   89      | unary . '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 116
    '('       shift, and go to state 117
    '.'       shift, and go to state 118

    $default  reduce using rule 70 (binary)


State 133

   61 and_list: and_list LOGICAL_AND binary .
   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary

    RELOP  shift, and go to state 105
    EQUOP  shift, and go to state 106
    '+'    shift, and go to state 107
    '-'    shift, and go to state 108
    '*'    shift, and go to state 109
    '/'    shift, and go to state 110
    '%'    shift, and go to state 111

    $default  reduce using rule 61 (and_list)


State 134

   63 binary: binary . RELOP binary
   63       | binary RELOP binary .
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 63 (binary)


State 135

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   64       | binary EQUOP binary .
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary

    RELOP  shift, and go to state 105
    '+'    shift, and go to state 107
    '-'    shift, and go to state 108
    '*'    shift, and go to state 109
    '/'    shift, and go to state 110
    '%'    shift, and go to state 111

    $default  reduce using rule 64 (binary)


State 136

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   68       | binary '+' binary .
   69       | binary . '-' binary

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 68 (binary)


State 137

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary
   69       | binary '-' binary .

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 69 (binary)


State 138

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   65       | binary '*' binary .
   66       | binary . '/' binary
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary

    $default  reduce using rule 65 (binary)


State 139

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   66       | binary '/' binary .
   67       | binary . '%' binary
   68       | binary . '+' binary
   69       | binary . '-' binary

    $default  reduce using rule 66 (binary)


State 140

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '*' binary
   66       | binary . '/' binary
   67       | binary . '%' binary
   67       | binary '%' binary .
   68       | binary . '+' binary
   69       | binary . '-' binary

    $default  reduce using rule 67 (binary)


State 141

   87 unary: unary STRUCTOP ID .

    $default  reduce using rule 87 (unary)


State 142

   55 expr: unary '=' $@6 . expr

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 157
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 143

   85 unary: unary '[' expr . ']'

    ']'  shift, and go to state 158


State 144

   89 unary: unary '(' ')' .

    $default  reduce using rule 89 (unary)


State 145

   90 args: expr .

    $default  reduce using rule 90 (args)


State 146

   88 unary: unary '(' args . ')'
   91 args: args . ',' expr

    ','  shift, and go to state 159
    ')'  shift, and go to state 160


State 147

   86 unary: unary '.' ID .

    $default  reduce using rule 86 (unary)


State 148

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 149

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 161


State 150

   41 stmt: RETURN $@5 expr ';' .

    $default  reduce using rule 41 (stmt)


State 151

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 162
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 152

   45 stmt: WHILE '(' expr ')' . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 163
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 153

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 164
    expr      go to state 125
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 154

   33 compound_stmt: '{' $@4 local_defs stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    '}'            shift, and go to state 165
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 74
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 155

   49 stmt: 'w' '(' STRING ')' .

    $default  reduce using rule 49 (stmt)


State 156

   50 stmt: 'w' '(' expr ')' .

    $default  reduce using rule 50 (stmt)


State 157

   55 expr: unary '=' $@6 expr .

    $default  reduce using rule 55 (expr)


State 158

   85 unary: unary '[' expr ']' .

    $default  reduce using rule 85 (unary)


State 159

   91 args: args ',' . expr

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    expr      go to state 166
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 160

   88 unary: unary '(' args ')' .

    $default  reduce using rule 88 (unary)


State 161

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 162

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 167

    $default  reduce using rule 43 (stmt)


State 163

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 164

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 168


State 165

   33 compound_stmt: '{' $@4 local_defs stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 166

   91 args: args ',' expr .

    $default  reduce using rule 91 (args)


State 167

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 169
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 168

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 170
    expr      go to state 125
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 169

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 170

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 171


State 171

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    RETURN         shift, and go to state 52
    IF             shift, and go to state 53
    WHILE          shift, and go to state 54
    FOR            shift, and go to state 55
    BREAK          shift, and go to state 56
    CONTINUE       shift, and go to state 57
    INCOP          shift, and go to state 58
    DECOP          shift, and go to state 59
    ID             shift, and go to state 60
    INTEGER_CONST  shift, and go to state 61
    STRING         shift, and go to state 62
    CHAR_CONST     shift, and go to state 63
    '&'            shift, and go to state 64
    '-'            shift, and go to state 65
    '*'            shift, and go to state 66
    '!'            shift, and go to state 67
    '('            shift, and go to state 68
    ';'            shift, and go to state 69
    '{'            shift, and go to state 70
    'w'            shift, and go to state 72

    compound_stmt  go to state 73
    stmt           go to state 172
    expr           go to state 75
    or_expr        go to state 76
    or_list        go to state 77
    and_expr       go to state 78
    and_list       go to state 79
    binary         go to state 80
    unary          go to state 81


State 172

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
